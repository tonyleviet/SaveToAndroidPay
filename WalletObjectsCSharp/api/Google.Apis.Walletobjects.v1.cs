// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.0
//     C# generater version: 1.9.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \mainpage
 *   walletobjects Version v1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href=''>walletobjects</a>
 *      <tr><th>API Version<td>v1
 *      <tr><th>API Rev<td>0
 *      <tr><th>API Docs
 *          <td><a href=''>
 *              </a>
 *      <tr><th>Discovery Name<td>walletobjects
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using walletobjects can be found at
 * <a href=''></a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.Walletobjects.v1.Data
{    

    public class Barcode : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A human readable equivalent of the barcode value, used when the barcode cannot be
        /// scanned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("alternateText")]
        public virtual string AlternateText { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "walletobjects#barcode".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The barcode label describing the contents of the barcode, such as "OFFER CODE" or "MEMBER
        /// ID."</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual string Label { get; set; } 

        /// <summary>The type of barcode.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The value encoded in the barcode.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class BoardingPassClass : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The aircraft type, such as "Boeing 757-300".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("aircraftType")]
        public virtual string AircraftType { get; set; } 

        /// <summary>Identifies whether multiple users will save the same object referencing this class. If true, each
        /// object saved will have the same ID. If false, each object saved will have a different ID. The default is
        /// false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowMultipleUsersPerObject")]
        public virtual System.Nullable<bool> AllowMultipleUsersPerObject { get; set; } 

        /// <summary>The arrival IATA airport code, such as "SFO" for San Francisco International Airpot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("arrivalAirportCode")]
        public virtual string ArrivalAirportCode { get; set; } 

        /// <summary>The arrival city's name, such as "San Francisco".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("arrivalCityName")]
        public virtual string ArrivalCityName { get; set; } 

        /// <summary>The currently known arrival date and time (relative to arrival airport's time zone).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("arrivalDateTimeActual")]
        public virtual DateTime ArrivalDateTimeActual { get; set; } 

        /// <summary>The originally scheduled arrival date and time (relative to arrival airport's time zone).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("arrivalDateTimeScheduled")]
        public virtual DateTime ArrivalDateTimeScheduled { get; set; } 

        /// <summary>The arrival gate, such as "57".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("arrivalGate")]
        public virtual string ArrivalGate { get; set; } 

        /// <summary>The arrival terminal code, such as "2".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("arrivalTerminal")]
        public virtual string ArrivalTerminal { get; set; } 

        /// <summary>The Olson ID for the arrival airport's time zone.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("arrivalTimeZone")]
        public virtual string ArrivalTimeZone { get; set; } 

        /// <summary>The date and time when boarding begins (relative to departure airport's time zone).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boardingDateTime")]
        public virtual DateTime BoardingDateTime { get; set; } 

        /// <summary>The IATA airline code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("carrierCode")]
        public virtual string CarrierCode { get; set; } 

        /// <summary>The carrier's logo.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("carrierLogoImage")]
        public virtual Image CarrierLogoImage { get; set; } 

        /// <summary>The carrier name, such as "Sky Airways".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("carrierName")]
        public virtual string CarrierName { get; set; } 

        /// <summary>The departure IATA airport code, such as "BOS" for Logan International Airport.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("departureAirportCode")]
        public virtual string DepartureAirportCode { get; set; } 

        /// <summary>The departure city's name, such as "Boston".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("departureCityName")]
        public virtual string DepartureCityName { get; set; } 

        /// <summary>The currently known departure date and time (relative to departure airport's time zone).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("departureDateTimeActual")]
        public virtual DateTime DepartureDateTimeActual { get; set; } 

        /// <summary>The originally scheduled departure date and time (relative to the departure airport's time
        /// zone).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("departureDateTimeScheduled")]
        public virtual DateTime DepartureDateTimeScheduled { get; set; } 

        /// <summary>The departure gate, such as "B15".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("departureGate")]
        public virtual string DepartureGate { get; set; } 

        /// <summary>The departure terminal code, such as "B".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("departureTerminal")]
        public virtual string DepartureTerminal { get; set; } 

        /// <summary>The Olson ID for the departure airport's time zone.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("departureTimeZone")]
        public virtual string DepartureTimeZone { get; set; } 

        /// <summary>The flight number, such as "758".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flightNumber")]
        public virtual string FlightNumber { get; set; } 

        /// <summary>The URI of your application's home page. Populating the URI in this field results in the exact same
        /// behavior as populating an URI in linksModuleData (when a Wallet Object is rendered, a link to the homepage
        /// is shown in what would usually be thought of as the linksModuleData section of the Wallet Object).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("homepageUri")]
        public virtual Uri HomepageUri { get; set; } 

        /// <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
        /// value should follow the format issuer ID.identifier where the former is issued by Google and latter is
        /// chosen by you. Your unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Image module data. If image modules data is also defined on the object, those will be displayed
        /// first, followed by image modules data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageModulesData")]
        public virtual System.Collections.Generic.IList<ImageModuleData> ImageModulesData { get; set; } 

        /// <summary>Info module data. If info module data is also defined on the object, that will be displayed first,
        /// followed by info module data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoModuleData")]
        public virtual InfoModuleData InfoModuleData { get; set; } 

        /// <summary>Identifies integrator-defined data. You can use this as a key-value pair map to store any data you
        /// want to associate with a class. Refer to the Using Templates section for further information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerData")]
        public virtual TypedValue IssuerData { get; set; } 

        /// <summary>The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on
        /// smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerName")]
        public virtual string IssuerName { get; set; } 

        /// <summary>Links module data. If links module data is also defined on the object, that will be displayed
        /// first, followed by links module data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linksModuleData")]
        public virtual LinksModuleData LinksModuleData { get; set; } 

        /// <summary>The list of locations where the Wallet Object can be used. The Wallet Objects platform uses this
        /// information to trigger geolocated notifications to users. Note that locations in the object override
        /// locations in the class which override locations in the Google Places ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<LatLongPoint> Locations { get; set; } 

        /// <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
        /// receive its associated messages.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<WalletObjectMessage> Messages { get; set; } 

        /// <summary>The in-flight services, such as "Wi-Fi".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("onboardServices")]
        public virtual System.Collections.Generic.IList<string> OnboardServices { get; set; } 

        /// <summary>The IATA airline code of carrier actually flying the plane (if codeshare).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operatingCarrierCode")]
        public virtual string OperatingCarrierCode { get; set; } 

        /// <summary>The name of carrier actually flying the plane (if codeshare).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operatingCarrierName")]
        public virtual string OperatingCarrierName { get; set; } 

        /// <summary>The flight number of carrier actually flying the plane</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operatingFlightNumber")]
        public virtual string OperatingFlightNumber { get; set; } 

        /// <summary>Identifies the templates used for rendering fields in the Google Wallet app. Refer to the Using
        /// Templates section for more details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("renderSpecs")]
        public virtual System.Collections.Generic.IList<RenderSpec> RenderSpecs { get; set; } 

        /// <summary>The review comments set by the Wallet Objects Platform when a class is marked approved or
        /// rejected.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("review")]
        public virtual CommonWalletObjectClassReview Review { get; set; } 

        /// <summary>The status of the class. This field can be set to draft or underReview using the insert or update
        /// API calls.
        ///
        /// You should set this field to draft when the class is under development. A draft class can only be seen by
        /// trusted testers who have access to your issuer account.
        ///
        /// You should set this field to underReview when you believe the class is ready for review. An underReview
        /// class has the same visibility as a draft class, but is automatically sent to Google for approval.
        ///
        /// The Wallet Objects Platform sets this field to approved when the class meets certain criteria. An approved
        /// class is visible to the public.
        ///
        /// The Wallet Objects Platform sets this field to rejected when the class does not meet certain criteria. A
        /// rejected class can only be seen by trusted testers who have access to your issuer account.
        ///
        /// The Wallet Objects Platform automatically increments the version of the class when the review status is
        /// changed to approved or rejected.
        ///
        /// Refer to the Class Approval Process section for further information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reviewStatus")]
        public virtual string ReviewStatus { get; set; } 

        /// <summary>The flight's status code, such as "delayed".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("statusCode")]
        public virtual string StatusCode { get; set; } 

        /// <summary>Text module data. If text modules data is also defined on the object, those will be displayed
        /// first, followed by text modules data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textModulesData")]
        public virtual System.Collections.Generic.IList<TextModuleData> TextModulesData { get; set; } 

        /// <summary>Deprecated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual System.Nullable<long> Version { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class BoardingPassClassAddMessageRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual WalletObjectMessage Message { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("reviewStatus")]
        public virtual string ReviewStatus { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class BoardingPassClassAddMessageResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual BoardingPassClass Resource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class BoardingPassClassGetRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual BoardingPassClassMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class BoardingPassClassListRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual BoardingPassClassMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class BoardingPassClassListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Nested object containing pagination information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pagination")]
        public virtual Pagination Pagination { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<BoardingPassClass> Resources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class BoardingPassClassMask : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("fields")]
        public virtual System.Collections.Generic.IList<FieldMask> Fields { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("projection")]
        public virtual string Projection { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class BoardingPassObject : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The barcode type and value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("barcode")]
        public virtual Barcode Barcode { get; set; } 

        /// <summary>The boarding zone, such as "2".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boardingZone")]
        public virtual string BoardingZone { get; set; } 

        /// <summary>The class associated with this object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("classId")]
        public virtual string ClassId { get; set; } 

        /// <summary>A copy of the inherited fields of the parent class. These fields are retrieved during a
        /// GET.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("classReference")]
        public virtual BoardingPassClass ClassReference { get; set; } 

        /// <summary>Indicates if the ticket is an e-ticket. If true, the ticket is an e-ticket. If false, the ticket is
        /// a paper ticket.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("electronicTicket")]
        public virtual System.Nullable<bool> ElectronicTicket { get; set; } 

        /// <summary>The frequent flier number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("freqFlierAccountId")]
        public virtual string FreqFlierAccountId { get; set; } 

        /// <summary>The frequent flyer program name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("freqFlierProgramName")]
        public virtual string FreqFlierProgramName { get; set; } 

        /// <summary>The frequent flier tier, such as "Platinum".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("freqFlierTierLevel")]
        public virtual string FreqFlierTierLevel { get; set; } 

        /// <summary>Indicates if the Wallet Object has users. This field is set by the Wallet Objects
        /// Platform.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hasUsers")]
        public virtual System.Nullable<bool> HasUsers { get; set; } 

        /// <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
        /// value should follow the format issuer ID.identifier where the former is issued by Google and latter is
        /// chosen by you. The unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Image module data. If image modules data is also defined on the class, the ones defined here on the
        /// object will be displayed first, followed by those defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageModulesData")]
        public virtual System.Collections.Generic.IList<ImageModuleData> ImageModulesData { get; set; } 

        /// <summary>Info module data. If info module data is also defined on the class, the one defined here on the
        /// object will be displayed first, followed by the one defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoModuleData")]
        public virtual InfoModuleData InfoModuleData { get; set; } 

        /// <summary>Identifies integrator-defined data. You can use this as a key-value pair map to store any data you
        /// want to associate with an object. Refer to the Using Templates section for further information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerData")]
        public virtual TypedValue IssuerData { get; set; } 

        /// <summary>Links module data. If links module data is also defined on the class, the one defined here on the
        /// object will be displayed first, followed by those defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linksModuleData")]
        public virtual LinksModuleData LinksModuleData { get; set; } 

        /// <summary>The list of locations where the Wallet Object can be used. The Wallet Object platform uses this
        /// information to trigger geolocated notifications to users. Note that locations in the object override
        /// locations in the class which override locations in the Google Places ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<LatLongPoint> Locations { get; set; } 

        /// <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
        /// receive its associated messages.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<WalletObjectMessage> Messages { get; set; } 

        /// <summary>Passenger name</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("passengerName")]
        public virtual PassengerName PassengerName { get; set; } 

        /// <summary>The passenger status codes, such as "STBY" for "standby."</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("passengerStatus")]
        public virtual System.Collections.Generic.IList<string> PassengerStatus { get; set; } 

        /// <summary>The TSA Precheck logo.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("precheckLogo")]
        public virtual Image PrecheckLogo { get; set; } 

        /// <summary>The 6 character PNR (reservation) record id, such as "RXT53L".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recordLocator")]
        public virtual string RecordLocator { get; set; } 

        /// <summary>The seat number, such as "14C".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("seat")]
        public virtual string Seat { get; set; } 

        /// <summary>The seat class, such as "Economy".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("seatClass")]
        public virtual string SeatClass { get; set; } 

        /// <summary>The seat description strings, such as "Aisle, Extra leg room".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("seatDescriptions")]
        public virtual System.Collections.Generic.IList<string> SeatDescriptions { get; set; } 

        /// <summary>The TSA security code, such as "SSSS" for "flagged for screening."</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("securitySelecteeStatus")]
        public virtual string SecuritySelecteeStatus { get; set; } 

        /// <summary>The boarding sequence number, such as "003".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sequenceNumber")]
        public virtual string SequenceNumber { get; set; } 

        /// <summary>The special service codes, such as "UMNR" for "unaccompanied minor."</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("specialServiceCodes")]
        public virtual System.Collections.Generic.IList<string> SpecialServiceCodes { get; set; } 

        /// <summary>The state of the Wallet Object. This field is used to determine how a Wallet Object is displayed in
        /// the Google Wallet app. For example, an inactive object is no longer displayed in the Google Wallet app.
        /// Valid values are: - active: Object is active and displayed to with other active objects. - completed: Object
        /// has been used and is displayed with other used and expired objects. - expired: Object is no longer valid
        /// (validTimeInterval passed). - inactive: Object is inactive and hidden from view.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; } 

        /// <summary>Text module data. If text module data is also defined on the class, the ones defined here on the
        /// object will be displayed first, followed by those defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textModulesData")]
        public virtual System.Collections.Generic.IList<TextModuleData> TextModulesData { get; set; } 

        /// <summary>The ticket number containing the coupon for the corresponding segment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ticketNumber")]
        public virtual string TicketNumber { get; set; } 

        /// <summary>The time period this object will be active and object can be used. An object's state will be
        /// changed to expired when this time period has passed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("validTimeInterval")]
        public virtual TimeInterval ValidTimeInterval { get; set; } 

        /// <summary>The current version of the object. Set this value to 1 for first version of the public object. When
        /// updating a object, you must specify the current version + 1 allowing the platform to ensure you are updating
        /// the most recent version of your object.
        ///
        /// Note that the Wallet Objects platform might make edits to objects which will increment the version number.
        /// For example, the platform will increment this number when the state of an object changes to expired (
        /// validTimeInterval passed).
        ///
        /// Follow these steps to make an update to an object: - Get the latest version of the object. - Make edits to
        /// the object. - Increment the version. - Update the object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual System.Nullable<long> Version { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class BoardingPassObjectAddMessageRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual WalletObjectMessage Message { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class BoardingPassObjectAddMessageResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual BoardingPassObject Resource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class BoardingPassObjectGetRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual BoardingPassObjectMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class BoardingPassObjectListRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual BoardingPassObjectMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class BoardingPassObjectListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Nested object containing pagination information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pagination")]
        public virtual Pagination Pagination { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<BoardingPassObject> Resources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class BoardingPassObjectMask : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("fields")]
        public virtual System.Collections.Generic.IList<FieldMask> Fields { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("projection")]
        public virtual string Projection { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class CommonWalletObjectClassReview : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The explanation of why the class was marked approved or rejected.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comments")]
        public virtual string Comments { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class DateTime : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>RFC 3339 formatted date-time. For example "1985-04-12T23:20:50.52Z" would be 20 minutes and 50.52
        /// seconds after the 23rd hour of April 12th, 1985 in UTC.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("date")]
        public virtual string DateRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="DateRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> Date
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(DateRaw);
            }
            set
            {
                DateRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class FieldMask : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("fields")]
        public virtual System.Collections.Generic.IList<FieldMask> Fields { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<int> Id { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenericClass : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies whether multiple users will save the same object referencing this class. If true, each
        /// object saved will have the same ID. If false, each object saved will have a different ID. The default is
        /// false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowMultipleUsersPerObject")]
        public virtual System.Nullable<bool> AllowMultipleUsersPerObject { get; set; } 

        /// <summary>The user-facing description. After 20 characters the remainder of the description will be displayed
        /// with ellipsis.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The URI of your application's home page. Populating the URI in this field results in the exact same
        /// behavior as populating an URI in linksModuleData (when a Wallet Object is rendered, a link to the homepage
        /// is shown in what would usually be thought of as the linksModuleData section of the Wallet Object).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("homepageUri")]
        public virtual Uri HomepageUri { get; set; } 

        /// <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
        /// value should follow the format issuer ID.identifier where the former is issued by Google and latter is
        /// chosen by you. Your unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Image module data. If image modules data is also defined on the object, those will be displayed
        /// first, followed by image modules data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageModulesData")]
        public virtual System.Collections.Generic.IList<ImageModuleData> ImageModulesData { get; set; } 

        /// <summary>Info module data. If info module data is also defined on the object, that will be displayed first,
        /// followed by info module data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoModuleData")]
        public virtual InfoModuleData InfoModuleData { get; set; } 

        /// <summary>Identifies integrator-defined data. You can use this as a key-value pair map to store any data you
        /// want to associate with a class. Refer to the Using Templates section for further information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerData")]
        public virtual TypedValue IssuerData { get; set; } 

        /// <summary>The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on
        /// smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerName")]
        public virtual string IssuerName { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "walletobjects#genericClass".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Links module data. If links module data is also defined on the object, that will be displayed
        /// first, followed by links module data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linksModuleData")]
        public virtual LinksModuleData LinksModuleData { get; set; } 

        /// <summary>The list of locations where the Wallet Object can be used. The Wallet Objects platform uses this
        /// information to trigger geolocated notifications to users. Note that locations in the object override
        /// locations in the class which override locations in the Google Places ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<LatLongPoint> Locations { get; set; } 

        /// <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
        /// receive its associated messages.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<WalletObjectMessage> Messages { get; set; } 

        /// <summary>Identifies the templates used for rendering fields in the Google Wallet app. Refer to the Using
        /// Templates section for more details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("renderSpecs")]
        public virtual System.Collections.Generic.IList<RenderSpec> RenderSpecs { get; set; } 

        /// <summary>The review comments set by the Wallet Objects Platform when a class is marked approved or
        /// rejected.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("review")]
        public virtual CommonWalletObjectClassReview Review { get; set; } 

        /// <summary>The status of the class. This field can be set to draft or underReview using the insert or update
        /// API calls.
        ///
        /// You should set this field to draft when the class is under development. A draft class can only be seen by
        /// trusted testers who have access to your issuer account.
        ///
        /// You should set this field to underReview when you believe the class is ready for review. An underReview
        /// class has the same visibility as a draft class, but is automatically sent to Google for approval.
        ///
        /// The Wallet Objects Platform sets this field to approved when the class meets certain criteria. An approved
        /// class is visible to the public.
        ///
        /// The Wallet Objects Platform sets this field to rejected when the class does not meet certain criteria. A
        /// rejected class can only be seen by trusted testers who have access to your issuer account.
        ///
        /// The Wallet Objects Platform automatically increments the version of the class when the review status is
        /// changed to approved or rejected.
        ///
        /// Refer to the Class Approval Process section for further information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reviewStatus")]
        public virtual string ReviewStatus { get; set; } 

        /// <summary>Text module data. If text modules data is also defined on the object, those will be displayed
        /// first, followed by text modules data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textModulesData")]
        public virtual System.Collections.Generic.IList<TextModuleData> TextModulesData { get; set; } 

        /// <summary>The user-facing title. After 20 characters the remainder of the title will be displayed with
        /// ellipsis.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The user-facing image displayed in the title section.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("titleImage")]
        public virtual Image TitleImage { get; set; } 

        /// <summary>Deprecated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual System.Nullable<long> Version { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenericClassAddMessageRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual WalletObjectMessage Message { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("reviewStatus")]
        public virtual string ReviewStatus { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenericClassAddMessageResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual GenericClass Resource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenericClassGetRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual GenericClassMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenericClassListRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual GenericClassMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenericClassListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Nested object containing pagination information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pagination")]
        public virtual Pagination Pagination { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<GenericClass> Resources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenericClassMask : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("fields")]
        public virtual System.Collections.Generic.IList<FieldMask> Fields { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("projection")]
        public virtual string Projection { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenericObject : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The barcode type and value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("barcode")]
        public virtual Barcode Barcode { get; set; } 

        /// <summary>The class associated with this object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("classId")]
        public virtual string ClassId { get; set; } 

        /// <summary>A copy of the inherited fields of the parent class. These fields are retrieved during a
        /// GET.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("classReference")]
        public virtual GenericClass ClassReference { get; set; } 

        /// <summary>Indicates if the Wallet Object has users. This field is set by the Wallet Objects
        /// Platform.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hasUsers")]
        public virtual System.Nullable<bool> HasUsers { get; set; } 

        /// <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
        /// value should follow the format issuer ID.identifier where the former is issued by Google and latter is
        /// chosen by you. The unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Image module data. If image modules data is also defined on the class, the ones defined here on the
        /// object will be displayed first, followed by those defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageModulesData")]
        public virtual System.Collections.Generic.IList<ImageModuleData> ImageModulesData { get; set; } 

        /// <summary>Info module data. If info module data is also defined on the class, the one defined here on the
        /// object will be displayed first, followed by the one defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoModuleData")]
        public virtual InfoModuleData InfoModuleData { get; set; } 

        /// <summary>Identifies integrator-defined data. You can use this as a key-value pair map to store any data you
        /// want to associate with an object. Refer to the Using Templates section for further information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerData")]
        public virtual TypedValue IssuerData { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "walletobjects#genericObject".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Links module data. If links module data is also defined on the class, the one defined here on the
        /// object will be displayed first, followed by those defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linksModuleData")]
        public virtual LinksModuleData LinksModuleData { get; set; } 

        /// <summary>The list of locations where the Wallet Object can be used. The Wallet Object platform uses this
        /// information to trigger geolocated notifications to users. Note that locations in the object override
        /// locations in the class which override locations in the Google Places ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<LatLongPoint> Locations { get; set; } 

        /// <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
        /// receive its associated messages.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<WalletObjectMessage> Messages { get; set; } 

        /// <summary>The state of the Wallet Object. This field is used to determine how a Wallet Object is displayed in
        /// the Google Wallet app. For example, an inactive object is no longer displayed in the Google Wallet app.
        /// Valid values are: - active: Object is active and displayed to with other active objects. - completed: Object
        /// has been used and is displayed with other used and expired objects. - expired: Object is no longer valid
        /// (validTimeInterval passed). - inactive: Object is inactive and hidden from view.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; } 

        /// <summary>Text module data. If text module data is also defined on the class, the ones defined here on the
        /// object will be displayed first, followed by those defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textModulesData")]
        public virtual System.Collections.Generic.IList<TextModuleData> TextModulesData { get; set; } 

        /// <summary>The time period this object will be active and object can be used. An object's state will be
        /// changed to expired when this time period has passed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("validTimeInterval")]
        public virtual TimeInterval ValidTimeInterval { get; set; } 

        /// <summary>The current version of the object. Set this value to 1 for first version of the public object. When
        /// updating a object, you must specify the current version + 1 allowing the platform to ensure you are updating
        /// the most recent version of your object.
        ///
        /// Note that the Wallet Objects platform might make edits to objects which will increment the version number.
        /// For example, the platform will increment this number when the state of an object changes to expired (
        /// validTimeInterval passed).
        ///
        /// Follow these steps to make an update to an object: - Get the latest version of the object. - Make edits to
        /// the object. - Increment the version. - Update the object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual System.Nullable<long> Version { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenericObjectAddMessageRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual WalletObjectMessage Message { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenericObjectAddMessageResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual GenericObject Resource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenericObjectGetRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual GenericObjectMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenericObjectListRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual GenericObjectMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenericObjectListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Nested object containing pagination information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pagination")]
        public virtual Pagination Pagination { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<GenericObject> Resources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenericObjectMask : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("fields")]
        public virtual System.Collections.Generic.IList<FieldMask> Fields { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("projection")]
        public virtual string Projection { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GiftCardClass : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Determines whether the merchant supports gift card redemption using barcode. If true, Google Wallet
        /// app displays a barcode for the gift card on the Gift card details screen. If false, a barcode is not
        /// displayed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowBarcodeRedemption")]
        public virtual System.Nullable<bool> AllowBarcodeRedemption { get; set; } 

        /// <summary>Identifies whether multiple users will save the same object referencing this class. If true, each
        /// object saved will have the same ID. If false, each object saved will have a different ID. The default is
        /// false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowMultipleUsersPerObject")]
        public virtual System.Nullable<bool> AllowMultipleUsersPerObject { get; set; } 

        /// <summary>The label to display for event number, such as "Target Event #".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventNumberLabel")]
        public virtual string EventNumberLabel { get; set; } 

        /// <summary>The URI of your application's home page. Populating the URI in this field results in the exact same
        /// behavior as populating an URI in linksModuleData (when a Wallet Object is rendered, a link to the homepage
        /// is shown in what would usually be thought of as the linksModuleData section of the Wallet Object).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("homepageUri")]
        public virtual Uri HomepageUri { get; set; } 

        /// <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
        /// value should follow the format issuer ID.identifier where the former is issued by Google and latter is
        /// chosen by you. Your unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Image module data. If image modules data is also defined on the object, those will be displayed
        /// first, followed by image modules data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageModulesData")]
        public virtual System.Collections.Generic.IList<ImageModuleData> ImageModulesData { get; set; } 

        /// <summary>Info module data. If info module data is also defined on the object, that will be displayed first,
        /// followed by info module data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoModuleData")]
        public virtual InfoModuleData InfoModuleData { get; set; } 

        /// <summary>Identifies integrator-defined data. You can use this as a key-value pair map to store any data you
        /// want to associate with a class. Refer to the Using Templates section for further information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerData")]
        public virtual TypedValue IssuerData { get; set; } 

        /// <summary>The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on
        /// smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerName")]
        public virtual string IssuerName { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "walletobjects#giftCardClass".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Links module data. If links module data is also defined on the object, that will be displayed
        /// first, followed by links module data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linksModuleData")]
        public virtual LinksModuleData LinksModuleData { get; set; } 

        /// <summary>The list of locations where the Wallet Object can be used. The Wallet Objects platform uses this
        /// information to trigger geolocated notifications to users. Note that locations in the object override
        /// locations in the class which override locations in the Google Places ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<LatLongPoint> Locations { get; set; } 

        /// <summary>Merchant name, such as "Adam's Apparel". The Google Wallet app will display an ellipsis after the
        /// first 20 characters to ensure full string is displayed on smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("merchantName")]
        public virtual string MerchantName { get; set; } 

        /// <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
        /// receive its associated messages.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<WalletObjectMessage> Messages { get; set; } 

        /// <summary>The label to display for the PIN, such as ""4-digit PIN".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pinLabel")]
        public virtual string PinLabel { get; set; } 

        /// <summary>The logo of the gift card program or company. This logo is displayed in both the expanded and list
        /// views of the Google Wallet app.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("programLogo")]
        public virtual Image ProgramLogo { get; set; } 

        /// <summary>If present a selected message type can be shown to the user to notify them of some restriction on
        /// redemption, e.g. that they may be required to keep their plastic card</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redemptionMessage")]
        public virtual string RedemptionMessage { get; set; } 

        /// <summary>Identifies the templates used for rendering fields in the Google Wallet app. Refer to the Using
        /// Templates section for more details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("renderSpecs")]
        public virtual System.Collections.Generic.IList<RenderSpec> RenderSpecs { get; set; } 

        /// <summary>The review comments set by the Wallet Objects Platform when a class is marked approved or
        /// rejected.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("review")]
        public virtual CommonWalletObjectClassReview Review { get; set; } 

        /// <summary>The status of the class. This field can be set to draft or underReview using the insert or update
        /// API calls.
        ///
        /// You should set this field to draft when the class is under development. A draft class can only be seen by
        /// trusted testers who have access to your issuer account.
        ///
        /// You should set this field to underReview when you believe the class is ready for review. An underReview
        /// class has the same visibility as a draft class, but is automatically sent to Google for approval.
        ///
        /// The Wallet Objects Platform sets this field to approved when the class meets certain criteria. An approved
        /// class is visible to the public.
        ///
        /// The Wallet Objects Platform sets this field to rejected when the class does not meet certain criteria. A
        /// rejected class can only be seen by trusted testers who have access to your issuer account.
        ///
        /// The Wallet Objects Platform automatically increments the version of the class when the review status is
        /// changed to approved or rejected.
        ///
        /// Refer to the Class Approval Process section for further information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reviewStatus")]
        public virtual string ReviewStatus { get; set; } 

        /// <summary>Text module data. If text modules data is also defined on the object, those will be displayed
        /// first, followed by text modules data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textModulesData")]
        public virtual System.Collections.Generic.IList<TextModuleData> TextModulesData { get; set; } 

        /// <summary>Deprecated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual System.Nullable<long> Version { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GiftCardClassAddMessageRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual WalletObjectMessage Message { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("reviewStatus")]
        public virtual string ReviewStatus { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GiftCardClassAddMessageResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual GiftCardClass Resource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GiftCardClassGetRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual GiftCardClassMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GiftCardClassListRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual GiftCardClassMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GiftCardClassListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("pagination")]
        public virtual Pagination Pagination { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<GiftCardClass> Resources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GiftCardClassMask : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("fields")]
        public virtual System.Collections.Generic.IList<FieldMask> Fields { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("projection")]
        public virtual string Projection { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GiftCardObject : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The card's monetary balance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("balance")]
        public virtual Money Balance { get; set; } 

        /// <summary>The date and time when the balance was last updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("balanceUpdateTime")]
        public virtual DateTime BalanceUpdateTime { get; set; } 

        /// <summary>The barcode type and value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("barcode")]
        public virtual Barcode Barcode { get; set; } 

        /// <summary>The card's number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardNumber")]
        public virtual string CardNumber { get; set; } 

        /// <summary>The class associated with this object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("classId")]
        public virtual string ClassId { get; set; } 

        /// <summary>A copy of the inherited fields of the parent class. These fields are retrieved during a
        /// GET.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("classReference")]
        public virtual GiftCardClass ClassReference { get; set; } 

        /// <summary>The card's event number, an optional field used by some gift cards.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventNumber")]
        public virtual string EventNumber { get; set; } 

        /// <summary>Indicates if the Wallet Object has users. This field is set by the Wallet Objects
        /// Platform.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hasUsers")]
        public virtual System.Nullable<bool> HasUsers { get; set; } 

        /// <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
        /// value should follow the format issuer ID.identifier where the former is issued by Google and latter is
        /// chosen by you. The unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Image module data. If image modules data is also defined on the class, the ones defined here on the
        /// object will be displayed first, followed by those defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageModulesData")]
        public virtual System.Collections.Generic.IList<ImageModuleData> ImageModulesData { get; set; } 

        /// <summary>Info module data. If info module data is also defined on the class, the one defined here on the
        /// object will be displayed first, followed by the one defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoModuleData")]
        public virtual InfoModuleData InfoModuleData { get; set; } 

        /// <summary>Identifies integrator-defined data. You can use this as a key-value pair map to store any data you
        /// want to associate with an object. Refer to the Using Templates section for further information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerData")]
        public virtual TypedValue IssuerData { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "walletobjects#giftCardObject".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Links module data. If links module data is also defined on the class, the one defined here on the
        /// object will be displayed first, followed by those defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linksModuleData")]
        public virtual LinksModuleData LinksModuleData { get; set; } 

        /// <summary>The list of locations where the Wallet Object can be used. The Wallet Object platform uses this
        /// information to trigger geolocated notifications to users. Note that locations in the object override
        /// locations in the class which override locations in the Google Places ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<LatLongPoint> Locations { get; set; } 

        /// <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
        /// receive its associated messages.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<WalletObjectMessage> Messages { get; set; } 

        /// <summary>The card's PIN.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pin")]
        public virtual string Pin { get; set; } 

        /// <summary>The state of the Wallet Object. This field is used to determine how a Wallet Object is displayed in
        /// the Google Wallet app. For example, an inactive object is no longer displayed in the Google Wallet app.
        /// Valid values are: - active: Object is active and displayed to with other active objects. - completed: Object
        /// has been used and is displayed with other used and expired objects. - expired: Object is no longer valid
        /// (validTimeInterval passed). - inactive: Object is inactive and hidden from view.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; } 

        /// <summary>Text module data. If text module data is also defined on the class, the ones defined here on the
        /// object will be displayed first, followed by those defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textModulesData")]
        public virtual System.Collections.Generic.IList<TextModuleData> TextModulesData { get; set; } 

        /// <summary>The time period this object will be active and object can be used. An object's state will be
        /// changed to expired when this time period has passed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("validTimeInterval")]
        public virtual TimeInterval ValidTimeInterval { get; set; } 

        /// <summary>The current version of the object. Set this value to 1 for first version of the public object. When
        /// updating a object, you must specify the current version + 1 allowing the platform to ensure you are updating
        /// the most recent version of your object.
        ///
        /// Note that the Wallet Objects platform might make edits to objects which will increment the version number.
        /// For example, the platform will increment this number when the state of an object changes to expired (
        /// validTimeInterval passed).
        ///
        /// Follow these steps to make an update to an object: - Get the latest version of the object. - Make edits to
        /// the object. - Increment the version. - Update the object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual System.Nullable<long> Version { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GiftCardObjectAddMessageRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual WalletObjectMessage Message { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GiftCardObjectAddMessageResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual GiftCardObject Resource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GiftCardObjectGetRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual GiftCardObjectMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GiftCardObjectListRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual GiftCardObjectMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GiftCardObjectListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("pagination")]
        public virtual Pagination Pagination { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<GiftCardObject> Resources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GiftCardObjectMask : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("fields")]
        public virtual System.Collections.Generic.IList<FieldMask> Fields { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("projection")]
        public virtual string Projection { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class IconBody : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of strings describing the body of the of the text module. The list of string is displayed
        /// with vertical spacing between them.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bodies")]
        public virtual System.Collections.Generic.IList<string> Bodies { get; set; } 

        /// <summary>The icon that summarizes what the icon should look like.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("icon")]
        public virtual string Icon { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Image : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string "walletobjects#image".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The URI for an image.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceUri")]
        public virtual Uri SourceUri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ImageModuleData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A 100% width image.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mainImage")]
        public virtual Image MainImage { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InfoModuleData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The background color for the Info Module. The format is #rrggbb where rrggbb is a hex RGB triplet,
        /// such as #ffcc00. You can also use the shorthand version of the RGB triplet which is #rgb, such as
        /// #fc0.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hexBackgroundColor")]
        public virtual string HexBackgroundColor { get; set; } 

        /// <summary>The color for the font in this Info Module. The format is #rrggbb where rrggbb is a hex RGB
        /// triplet, such as #ffcc00. You can also use the shorthand version of the RGB triplet which is #rgb, such as
        /// #fc0.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hexFontColor")]
        public virtual string HexFontColor { get; set; } 

        /// <summary>A list of rows. Refer to the  Using Templates section for information on how to specify rows and
        /// columns in the infoModuleData.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labelValueRows")]
        public virtual System.Collections.Generic.IList<LabelValueRow> LabelValueRows { get; set; } 

        /// <summary>Display the last update time of the Wallet Object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("showLastUpdateTime")]
        public virtual System.Nullable<bool> ShowLastUpdateTime { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A pair of text strings to be displayed in a table.</summary>
    public class LabelValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The label for a specific row and column. Recommended maximum is 15 characters for a two-column
        /// layout and 30 characters for a one-column layout.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual string Label { get; set; } 

        /// <summary>The value for a specific row and column. Recommended maximum is 15 characters for a two-column
        /// layout and 30 characters for a one-column layout.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LabelValueRow : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of columns. Refer to the  Using Templates section for information on how to specify rows and
        /// columns in the Info Module.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("columns")]
        public virtual System.Collections.Generic.IList<LabelValue> Columns { get; set; } 

        /// <summary>The background color for this row. The format is #rrggbb where rrggbb is a hex RGB triplet, such as
        /// #ffcc00. You can also use the shorthand version of the RGB triplet which is #rgb, such as #fc0.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hexBackgroundColor")]
        public virtual string HexBackgroundColor { get; set; } 

        /// <summary>The color for the font in this row. The format is #rrggbb where rrggbb is a hex RGB triplet, such
        /// as #ffcc00. You can also use the shorthand version of the RGB triplet which is #rgb, such as #fc0.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hexFontColor")]
        public virtual string HexFontColor { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LatLongPoint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "walletobjects#latLongPoint".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The latitude specified as any value in the range of -90.0 through +90.0, both inclusive. Values
        /// outside these bounds will be rejected.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latitude")]
        public virtual System.Nullable<double> Latitude { get; set; } 

        /// <summary>The longitude specified in the range -180.0 through +180.0, both inclusive. Values outside these
        /// bounds will be rejected.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("longitude")]
        public virtual System.Nullable<double> Longitude { get; set; } 

        /// <summary>The set of merchant-related metadata describing this physical location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual LocationMetadata Metadata { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LinksModuleData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of URIs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uris")]
        public virtual System.Collections.Generic.IList<Uri> Uris { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LocationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "walletobjects#locationMetadata".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The name of this location. Please note that it can vary from the name of e.g. an entire
        /// chain.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationName")]
        public virtual string LocationName { get; set; } 

        /// <summary>The phone number specific to this location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual string PhoneNumber { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LoyaltyClass : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The account ID label, such as "Member ID." Recommended maximum length is 15 characters to ensure
        /// full string is displayed on smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountIdLabel")]
        public virtual string AccountIdLabel { get; set; } 

        /// <summary>The account name label, such as "Member Name." Recommended maximum length is 15 characters to
        /// ensure full string is displayed on smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountNameLabel")]
        public virtual string AccountNameLabel { get; set; } 

        /// <summary>Identifies whether multiple users will save the same object referencing this class. If true, each
        /// object saved will have the same ID. If false, each object saved will have a different ID. The default is
        /// false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowMultipleUsersPerObject")]
        public virtual System.Nullable<bool> AllowMultipleUsersPerObject { get; set; } 

        /// <summary>The URI of your application's home page. Populating the URI in this field results in the exact same
        /// behavior as populating an URI in linksModuleData (when a Wallet Object is rendered, a link to the homepage
        /// is shown in what would usually be thought of as the linksModuleData section of the Wallet Object).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("homepageUri")]
        public virtual Uri HomepageUri { get; set; } 

        /// <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
        /// value should follow the format issuer ID.identifier where the former is issued by Google and latter is
        /// chosen by you. Your unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Image module data. If image modules data is also defined on the object, those will be displayed
        /// first, followed by image modules data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageModulesData")]
        public virtual System.Collections.Generic.IList<ImageModuleData> ImageModulesData { get; set; } 

        /// <summary>Info module data. If info module data is also defined on the object, that will be displayed first,
        /// followed by info module data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoModuleData")]
        public virtual InfoModuleData InfoModuleData { get; set; } 

        /// <summary>Identifies integrator-defined data. You can use this as a key-value pair map to store any data you
        /// want to associate with a class. Refer to the Using Templates section for further information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerData")]
        public virtual TypedValue IssuerData { get; set; } 

        /// <summary>The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on
        /// smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerName")]
        public virtual string IssuerName { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "walletobjects#loyaltyClass".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Links module data. If links module data is also defined on the object, that will be displayed
        /// first, followed by links module data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linksModuleData")]
        public virtual LinksModuleData LinksModuleData { get; set; } 

        /// <summary>The list of locations where the Wallet Object can be used. The Wallet Objects platform uses this
        /// information to trigger geolocated notifications to users. Note that locations in the object override
        /// locations in the class which override locations in the Google Places ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<LatLongPoint> Locations { get; set; } 

        /// <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
        /// receive its associated messages.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<WalletObjectMessage> Messages { get; set; } 

        /// <summary>The logo of the loyalty program or company. This logo is displayed in both the expanded and list
        /// views of the Google Wallet app.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("programLogo")]
        public virtual Image ProgramLogo { get; set; } 

        /// <summary>The program name, such as "Adam's Apparel". The Google Wallet app will display an ellipsis after
        /// the first 20 characters to ensure full string is displayed on smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("programName")]
        public virtual string ProgramName { get; set; } 

        /// <summary>Identifies the templates used for rendering fields in the Google Wallet app. Refer to the Using
        /// Templates section for more details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("renderSpecs")]
        public virtual System.Collections.Generic.IList<RenderSpec> RenderSpecs { get; set; } 

        /// <summary>The review comments set by the Wallet Objects Platform when a class is marked approved or
        /// rejected.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("review")]
        public virtual CommonWalletObjectClassReview Review { get; set; } 

        /// <summary>The status of the class. This field can be set to draft or underReview using the insert or update
        /// API calls.
        ///
        /// You should set this field to draft when the class is under development. A draft class can only be seen by
        /// trusted testers who have access to your issuer account.
        ///
        /// You should set this field to underReview when you believe the class is ready for review. An underReview
        /// class has the same visibility as a draft class, but is automatically sent to Google for approval.
        ///
        /// The Wallet Objects Platform sets this field to approved when the class meets certain criteria. An approved
        /// class is visible to the public.
        ///
        /// The Wallet Objects Platform sets this field to rejected when the class does not meet certain criteria. A
        /// rejected class can only be seen by trusted testers who have access to your issuer account.
        ///
        /// The Wallet Objects Platform automatically increments the version of the class when the review status is
        /// changed to approved or rejected.
        ///
        /// Refer to the Class Approval Process section for further information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reviewStatus")]
        public virtual string ReviewStatus { get; set; } 

        /// <summary>The rewards tier, such as "Gold" or "Platinum." Recommended maximum length is 7 characters to
        /// ensure full string is displayed on smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rewardsTier")]
        public virtual string RewardsTier { get; set; } 

        /// <summary>The rewards tier label, such as "Rewards Tier." Recommended maximum length is 9 characters to
        /// ensure full string is displayed on smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rewardsTierLabel")]
        public virtual string RewardsTierLabel { get; set; } 

        /// <summary>Text module data. If text modules data is also defined on the object, those will be displayed
        /// first, followed by text modules data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textModulesData")]
        public virtual System.Collections.Generic.IList<TextModuleData> TextModulesData { get; set; } 

        /// <summary>Deprecated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual System.Nullable<long> Version { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LoyaltyClassAddMessageRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual WalletObjectMessage Message { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("reviewStatus")]
        public virtual string ReviewStatus { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LoyaltyClassAddMessageResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual LoyaltyClass Resource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LoyaltyClassGetRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual LoyaltyClassMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LoyaltyClassListRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual LoyaltyClassMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LoyaltyClassListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Nested object containing pagination information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pagination")]
        public virtual Pagination Pagination { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<LoyaltyClass> Resources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LoyaltyClassMask : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("fields")]
        public virtual System.Collections.Generic.IList<FieldMask> Fields { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("projection")]
        public virtual string Projection { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LoyaltyObject : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The loyalty account identifier. Recommended maximum length is 20 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual string AccountId { get; set; } 

        /// <summary>The loyalty account holder name, such as "John Smith." Recommended maximum length is 20 characters
        /// to ensure full string is displayed on smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountName")]
        public virtual string AccountName { get; set; } 

        /// <summary>The barcode type and value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("barcode")]
        public virtual Barcode Barcode { get; set; } 

        /// <summary>The class associated with this object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("classId")]
        public virtual string ClassId { get; set; } 

        /// <summary>A copy of the inherited fields of the parent class. These fields are retrieved during a
        /// GET.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("classReference")]
        public virtual LoyaltyClass ClassReference { get; set; } 

        /// <summary>Indicates if the Wallet Object has users. This field is set by the Wallet Objects
        /// Platform.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hasUsers")]
        public virtual System.Nullable<bool> HasUsers { get; set; } 

        /// <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
        /// value should follow the format issuer ID.identifier where the former is issued by Google and latter is
        /// chosen by you. The unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Image module data. If image modules data is also defined on the class, the ones defined here on the
        /// object will be displayed first, followed by those defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageModulesData")]
        public virtual System.Collections.Generic.IList<ImageModuleData> ImageModulesData { get; set; } 

        /// <summary>Info module data. If info module data is also defined on the class, the one defined here on the
        /// object will be displayed first, followed by the one defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoModuleData")]
        public virtual InfoModuleData InfoModuleData { get; set; } 

        /// <summary>Identifies integrator-defined data. You can use this as a key-value pair map to store any data you
        /// want to associate with an object. Refer to the Using Templates section for further information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerData")]
        public virtual TypedValue IssuerData { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "walletobjects#loyaltyObject".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Links module data. If links module data is also defined on the class, the one defined here on the
        /// object will be displayed first, followed by those defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linksModuleData")]
        public virtual LinksModuleData LinksModuleData { get; set; } 

        /// <summary>The list of locations where the Wallet Object can be used. The Wallet Object platform uses this
        /// information to trigger geolocated notifications to users. Note that locations in the object override
        /// locations in the class which override locations in the Google Places ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<LatLongPoint> Locations { get; set; } 

        /// <summary>The loyalty reward points label, balance, and type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("loyaltyPoints")]
        public virtual LoyaltyPoints LoyaltyPoints { get; set; } 

        /// <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
        /// receive its associated messages.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<WalletObjectMessage> Messages { get; set; } 

        /// <summary>The state of the Wallet Object. This field is used to determine how a Wallet Object is displayed in
        /// the Google Wallet app. For example, an inactive object is no longer displayed in the Google Wallet app.
        /// Valid values are: - active: Object is active and displayed to with other active objects. - completed: Object
        /// has been used and is displayed with other used and expired objects. - expired: Object is no longer valid
        /// (validTimeInterval passed). - inactive: Object is inactive and hidden from view.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; } 

        /// <summary>Text module data. If text module data is also defined on the class, the ones defined here on the
        /// object will be displayed first, followed by those defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textModulesData")]
        public virtual System.Collections.Generic.IList<TextModuleData> TextModulesData { get; set; } 

        /// <summary>The time period this object will be active and object can be used. An object's state will be
        /// changed to expired when this time period has passed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("validTimeInterval")]
        public virtual TimeInterval ValidTimeInterval { get; set; } 

        /// <summary>The current version of the object. Set this value to 1 for first version of the public object. When
        /// updating a object, you must specify the current version + 1 allowing the platform to ensure you are updating
        /// the most recent version of your object.
        ///
        /// Note that the Wallet Objects platform might make edits to objects which will increment the version number.
        /// For example, the platform will increment this number when the state of an object changes to expired (
        /// validTimeInterval passed).
        ///
        /// Follow these steps to make an update to an object: - Get the latest version of the object. - Make edits to
        /// the object. - Increment the version. - Update the object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual System.Nullable<long> Version { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LoyaltyObjectAddMessageRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual WalletObjectMessage Message { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LoyaltyObjectAddMessageResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual LoyaltyObject Resource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LoyaltyObjectGetRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual LoyaltyObjectMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LoyaltyObjectListRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual LoyaltyObjectMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LoyaltyObjectListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Nested object containing pagination information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pagination")]
        public virtual Pagination Pagination { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<LoyaltyObject> Resources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LoyaltyObjectMask : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("fields")]
        public virtual System.Collections.Generic.IList<FieldMask> Fields { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("projection")]
        public virtual string Projection { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LoyaltyPoints : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The account holder's loyalty point balance, such as "500" or "$10.00". Recommended maximum length
        /// is 7 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("balance")]
        public virtual LoyaltyPointsBalance Balance { get; set; } 

        /// <summary>The loyalty points label, such as "Points". Recommended maximum length is 9 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual string Label { get; set; } 

        /// <summary>The type of loyalty points, such as "points" or "miles."</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pointsType")]
        public virtual string PointsType { get; set; } 

        /// <summary>The time interval after which the points will expire. Points will no longer be displayed in the
        /// Google Wallet app after points have expired.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pointsValidInterval")]
        public virtual TimeInterval PointsValidInterval { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LoyaltyPointsBalance : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The double form of a balance. Only one of these subtypes (string, int, double, money) should be
        /// populated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("double")]
        public virtual System.Nullable<double> Double { get; set; } 

        /// <summary>The integer form of a balance. Only one of these subtypes (string, int, double, money) should be
        /// populated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("int")]
        public virtual System.Nullable<int> Int { get; set; } 

        /// <summary>The money form of a balance. Only one of these subtypes (string, int, double, money) should be
        /// populated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("money")]
        public virtual Money Money { get; set; } 

        /// <summary>The string form of a balance. Only one of these subtypes (string, int, double, money) should be
        /// populated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("string")]
        public virtual string String { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Money : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The currency code, such as "USD" or "EUR."</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currencyCode")]
        public virtual string CurrencyCode { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "walletobjects#money".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The unit of money amount in micros. For example, $1 USD would be represented as 1000000
        /// micros.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("micros")]
        public virtual System.Nullable<long> Micros { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class OfferClass : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies whether multiple users will save the same object referencing this class. If true, each
        /// object saved will have the same ID. If false, each object saved will have a different ID. The default is
        /// false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowMultipleUsersPerObject")]
        public virtual System.Nullable<bool> AllowMultipleUsersPerObject { get; set; } 

        /// <summary>The details of the offer. Recommended maximum length is 500 characters to ensure full string is
        /// displayed on smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual string Details { get; set; } 

        /// <summary>The redemption time period for the offer. The offer is valid as soon as it is saved and has no
        /// expiration date if this field isn't set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("distributionTimeInterval")]
        public virtual TimeInterval DistributionTimeInterval { get; set; } 

        /// <summary>The fine print or terms of the offer, such as "20% off any t-shirt at Adam's Apparel." Recommended
        /// maximum length is 500 characters to ensure full string is displayed on smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("finePrint")]
        public virtual string FinePrint { get; set; } 

        /// <summary>The help link for the offer, such as http://myownpersonaldomain.com/help</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("helpUri")]
        public virtual Uri HelpUri { get; set; } 

        /// <summary>The URI of your application's home page. Populating the URI in this field results in the exact same
        /// behavior as populating an URI in linksModuleData (when a Wallet Object is rendered, a link to the homepage
        /// is shown in what would usually be thought of as the linksModuleData section of the Wallet Object).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("homepageUri")]
        public virtual Uri HomepageUri { get; set; } 

        /// <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
        /// value should follow the format issuer ID.identifier where the former is issued by Google and latter is
        /// chosen by you. Your unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Image module data. If image modules data is also defined on the object, those will be displayed
        /// first, followed by image modules data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageModulesData")]
        public virtual System.Collections.Generic.IList<ImageModuleData> ImageModulesData { get; set; } 

        /// <summary>Info module data. If info module data is also defined on the object, that will be displayed first,
        /// followed by info module data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoModuleData")]
        public virtual InfoModuleData InfoModuleData { get; set; } 

        /// <summary>Identifies integrator-defined data. You can use this as a key-value pair map to store any data you
        /// want to associate with a class. Refer to the Using Templates section for further information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerData")]
        public virtual TypedValue IssuerData { get; set; } 

        /// <summary>The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on
        /// smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerName")]
        public virtual string IssuerName { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "walletobjects#offerClass".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Links module data. If links module data is also defined on the object, that will be displayed
        /// first, followed by links module data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linksModuleData")]
        public virtual LinksModuleData LinksModuleData { get; set; } 

        /// <summary>The list of locations where the Wallet Object can be used. The Wallet Objects platform uses this
        /// information to trigger geolocated notifications to users. Note that locations in the object override
        /// locations in the class which override locations in the Google Places ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<LatLongPoint> Locations { get; set; } 

        /// <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
        /// receive its associated messages.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<WalletObjectMessage> Messages { get; set; } 

        /// <summary>The offer provider (either the aggregator name or merchant name). Recommended maximum length is 12
        /// characters to ensure full string is displayed on smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("provider")]
        public virtual string Provider { get; set; } 

        /// <summary>The redemption channels applicable to this offer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redemptionChannel")]
        public virtual string RedemptionChannel { get; set; } 

        /// <summary>Identifies the templates used for rendering fields in the Google Wallet app. Refer to the Using
        /// Templates section for more details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("renderSpecs")]
        public virtual System.Collections.Generic.IList<RenderSpec> RenderSpecs { get; set; } 

        /// <summary>The review comments set by the Wallet Objects Platform when a class is marked approved or
        /// rejected.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("review")]
        public virtual CommonWalletObjectClassReview Review { get; set; } 

        /// <summary>The status of the class. This field can be set to draft or underReview using the insert or update
        /// API calls.
        ///
        /// You should set this field to draft when the class is under development. A draft class can only be seen by
        /// trusted testers who have access to your issuer account.
        ///
        /// You should set this field to underReview when you believe the class is ready for review. An underReview
        /// class has the same visibility as a draft class, but is automatically sent to Google for approval.
        ///
        /// The Wallet Objects Platform sets this field to approved when the class meets certain criteria. An approved
        /// class is visible to the public.
        ///
        /// The Wallet Objects Platform sets this field to rejected when the class does not meet certain criteria. A
        /// rejected class can only be seen by trusted testers who have access to your issuer account.
        ///
        /// The Wallet Objects Platform automatically increments the version of the class when the review status is
        /// changed to approved or rejected.
        ///
        /// Refer to the Class Approval Process section for further information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reviewStatus")]
        public virtual string ReviewStatus { get; set; } 

        /// <summary>Text module data. If text modules data is also defined on the object, those will be displayed
        /// first, followed by text modules data defined here on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textModulesData")]
        public virtual System.Collections.Generic.IList<TextModuleData> TextModulesData { get; set; } 

        /// <summary>The title of the offer, such as "20% off any t-shirt." Recommended maximum length is 60 characters
        /// to ensure full string is displayed on smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The title image of the offer. This image is displayed in both the expanded and list views of the
        /// Google Wallet app.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("titleImage")]
        public virtual Image TitleImage { get; set; } 

        /// <summary>Deprecated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual System.Nullable<long> Version { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class OfferClassAddMessageRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual WalletObjectMessage Message { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("reviewStatus")]
        public virtual string ReviewStatus { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class OfferClassAddMessageResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual OfferClass Resource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class OfferClassGetRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual OfferClassMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class OfferClassListRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual OfferClassMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class OfferClassListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Nested object containing pagination information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pagination")]
        public virtual Pagination Pagination { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<OfferClass> Resources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class OfferClassMask : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("fields")]
        public virtual System.Collections.Generic.IList<FieldMask> Fields { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("projection")]
        public virtual string Projection { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class OfferObject : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The barcode type and value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("barcode")]
        public virtual Barcode Barcode { get; set; } 

        /// <summary>The class associated with this object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("classId")]
        public virtual string ClassId { get; set; } 

        /// <summary>A copy of the inherited fields of the parent class. These fields are retrieved during a
        /// GET.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("classReference")]
        public virtual OfferClass ClassReference { get; set; } 

        /// <summary>Indicates if the Wallet Object has users. This field is set by the Wallet Objects
        /// Platform.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hasUsers")]
        public virtual System.Nullable<bool> HasUsers { get; set; } 

        /// <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
        /// value should follow the format issuer ID.identifier where the former is issued by Google and latter is
        /// chosen by you. The unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Image module data. If image modules data is also defined on the class, the ones defined here on the
        /// object will be displayed first, followed by those defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageModulesData")]
        public virtual System.Collections.Generic.IList<ImageModuleData> ImageModulesData { get; set; } 

        /// <summary>Info module data. If info module data is also defined on the class, the one defined here on the
        /// object will be displayed first, followed by the one defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoModuleData")]
        public virtual InfoModuleData InfoModuleData { get; set; } 

        /// <summary>Identifies integrator-defined data. You can use this as a key-value pair map to store any data you
        /// want to associate with an object. Refer to the Using Templates section for further information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerData")]
        public virtual TypedValue IssuerData { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "walletobjects#offerObject".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Links module data. If links module data is also defined on the class, the one defined here on the
        /// object will be displayed first, followed by those defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linksModuleData")]
        public virtual LinksModuleData LinksModuleData { get; set; } 

        /// <summary>The list of locations where the Wallet Object can be used. The Wallet Object platform uses this
        /// information to trigger geolocated notifications to users. Note that locations in the object override
        /// locations in the class which override locations in the Google Places ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<LatLongPoint> Locations { get; set; } 

        /// <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
        /// receive its associated messages.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<WalletObjectMessage> Messages { get; set; } 

        /// <summary>The state of the Wallet Object. This field is used to determine how a Wallet Object is displayed in
        /// the Google Wallet app. For example, an inactive object is no longer displayed in the Google Wallet app.
        /// Valid values are: - active: Object is active and displayed to with other active objects. - completed: Object
        /// has been used and is displayed with other used and expired objects. - expired: Object is no longer valid
        /// (validTimeInterval passed). - inactive: Object is inactive and hidden from view.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; } 

        /// <summary>Text module data. If text module data is also defined on the class, the ones defined here on the
        /// object will be displayed first, followed by those defined on the class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textModulesData")]
        public virtual System.Collections.Generic.IList<TextModuleData> TextModulesData { get; set; } 

        /// <summary>The time period this object will be active and object can be used. An object's state will be
        /// changed to expired when this time period has passed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("validTimeInterval")]
        public virtual TimeInterval ValidTimeInterval { get; set; } 

        /// <summary>The current version of the object. Set this value to 1 for first version of the public object. When
        /// updating a object, you must specify the current version + 1 allowing the platform to ensure you are updating
        /// the most recent version of your object.
        ///
        /// Note that the Wallet Objects platform might make edits to objects which will increment the version number.
        /// For example, the platform will increment this number when the state of an object changes to expired (
        /// validTimeInterval passed).
        ///
        /// Follow these steps to make an update to an object: - Get the latest version of the object. - Make edits to
        /// the object. - Increment the version. - Update the object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual System.Nullable<long> Version { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class OfferObjectAddMessageRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual WalletObjectMessage Message { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class OfferObjectAddMessageResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual OfferObject Resource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class OfferObjectGetRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual OfferObjectMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class OfferObjectListRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("resultMask")]
        public virtual OfferObjectMask ResultMask { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class OfferObjectListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Nested object containing pagination information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pagination")]
        public virtual Pagination Pagination { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<OfferObject> Resources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class OfferObjectMask : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("fields")]
        public virtual System.Collections.Generic.IList<FieldMask> Fields { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("projection")]
        public virtual string Projection { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Pagination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "walletobjects#pagination".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Page token to send to fetch the next page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Number of results returned in this page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resultsPerPage")]
        public virtual System.Nullable<int> ResultsPerPage { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class PassengerName : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The passenger's first name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("first")]
        public virtual string First { get; set; } 

        /// <summary>The passenger's last name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("last")]
        public virtual string Last { get; set; } 

        /// <summary>The passenger's middle name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("middle")]
        public virtual string Middle { get; set; } 

        /// <summary>The prefix for the passenger's name, such as "Mr."</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prefix")]
        public virtual string Prefix { get; set; } 

        /// <summary>The suffix for the passenger's name, such as "Jr."</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suffix")]
        public virtual string Suffix { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RenderSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The template family used to render the Wallet Object. Valid values are: - 1.loyalty_expanded -
        /// 1.loyalty_list - 1.offer_expanded - 1.offer_list</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("templateFamily")]
        public virtual string TemplateFamily { get; set; } 

        /// <summary>The view name (either g_list or g_expanded). This determines the template family to use to display
        /// a Wallet Object. For example, g_expanded would map to a template_family name with the word "expanded" in it
        /// (such as 1. loyalty_expanded), while g_list would map to a template_family name with the word "list" in it
        /// (such as 1.loyalty_list).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("viewName")]
        public virtual string ViewName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Data for Text module. All fields are optional. Header will be displayed if available, different types
    /// of bodies will be concatenated if they are defined.</summary>
    public class TextModuleData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The body of the Text Module, which is defined as an uninterrupted string. Recommended maximum
        /// length is 500 characters to ensure full string is displayed on smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("body")]
        public virtual string Body { get; set; } 

        /// <summary>The header of the Text Module. Recommended maximum length is 35 characters to ensure full string is
        /// displayed on smaller screens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("header")]
        public virtual string Header { get; set; } 

        /// <summary>The body of the Text Module, which is a mapping from an icon to a list of strings. The list of
        /// string is displayed with vertical spacing between them.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("iconBodies")]
        public virtual System.Collections.Generic.IList<IconBody> IconBodies { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TimeInterval : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>End time of the interval.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("end")]
        public virtual DateTime End { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "walletobjects#timeInterval".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Start time of the interval.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("start")]
        public virtual DateTime Start { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TypedValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The bool value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bool")]
        public virtual System.Nullable<bool> Bool { get; set; } 

        /// <summary>The double value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("double")]
        public virtual System.Nullable<double> Double { get; set; } 

        /// <summary>The image value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual Image Image { get; set; } 

        /// <summary>The int value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("int")]
        public virtual System.Nullable<int> Int { get; set; } 

        /// <summary>The kind, fixed to "walletobjects#typedValue".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The list of typed values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("list")]
        public virtual System.Collections.Generic.IList<TypedValue> List { get; set; } 

        /// <summary>The string value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("string")]
        public virtual string String { get; set; } 

        /// <summary>The uri value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual Uri Uri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Uri : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URI's title appearing in the Google Wallet app as text. Recommended maximum is 20 characters to
        /// ensure full string is displayed on smaller screens.
        ///
        /// Note that in some contexts this text is not used, such as when description is part of an image.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "walletobjects#uri".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The location of a web page, image, or other resource. URIs in the LinksModuleData module can have
        /// different prefixes indicating the type of URI (a link to a web page, a link to a map, a telephone number, or
        /// an email address). Refer to the  LinksModuleData section of the User Interface Guidelines for further
        /// information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string UriValue { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class WalletObjectMessage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URI to which users are directed when they click on the message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("actionUri")]
        public virtual Uri ActionUri { get; set; } 

        /// <summary>The message body. The maximum length is 200 characters if you do not specify an image or 150
        /// characters if you specify an image. Refer to the Using Templates section for more details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("body")]
        public virtual string Body { get; set; } 

        /// <summary>The period of time that the message will be displayed to users. You can define both a startTime and
        /// endTime for each message. A message is displayed immediately after a Wallet Object is inserted unless a
        /// startTime is set. The message will appear in a list of messages indefinitely if endTime is not
        /// provided.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayInterval")]
        public virtual TimeInterval DisplayInterval { get; set; } 

        /// <summary>The message header. The maximum length is 30 characters if you do not specify an image or 20
        /// characters if you specify an image (depending on device resolution). Refer to the Using Templates section
        /// for more information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("header")]
        public virtual string Header { get; set; } 

        /// <summary>The ID associated with a message. This field is here to enable ease of management of messages.
        /// Notice ID values could possibly duplicate across multiple messages in the same class/instance, and care must
        /// be taken to select a reasonable ID for each message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The image to display with the message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual Image Image { get; set; } 

        /// <summary>Identifies what kind of resource this is. Value: the fixed string
        /// "walletobjects#walletObjectMessage".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}

namespace Google.Apis.Walletobjects.v1
{
    /// <summary>The Walletobjects Service.</summary>
    public class WalletobjectsService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public WalletobjectsService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public WalletobjectsService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            boardingpassclass = new BoardingpassclassResource(this);
            boardingpassobject = new BoardingpassobjectResource(this);
            genericclass = new GenericclassResource(this);
            genericobject = new GenericobjectResource(this);
            giftcardclass = new GiftcardclassResource(this);
            giftcardobject = new GiftcardobjectResource(this);
            loyaltyclass = new LoyaltyclassResource(this);
            loyaltyobject = new LoyaltyobjectResource(this);
            offerclass = new OfferclassResource(this);
            offerobject = new OfferobjectResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "walletobjects"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://www.googleapis.com/walletobjects/v1/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return "walletobjects/v1/"; }
        }

        /// <summary>Available OAuth 2.0 scopes for use with the walletobjects.</summary>
        public class Scope
        {
            /// <summary>You should never encounter this message. Please do not approve the access request.</summary>
            public static string WalletObjectIssuer = "https://www.googleapis.com/auth/wallet_object.issuer";

        }



        private readonly BoardingpassclassResource boardingpassclass;

        /// <summary>Gets the Boardingpassclass resource.</summary>
        public virtual BoardingpassclassResource Boardingpassclass
        {
            get { return boardingpassclass; }
        }

        private readonly BoardingpassobjectResource boardingpassobject;

        /// <summary>Gets the Boardingpassobject resource.</summary>
        public virtual BoardingpassobjectResource Boardingpassobject
        {
            get { return boardingpassobject; }
        }

        private readonly GenericclassResource genericclass;

        /// <summary>Gets the Genericclass resource.</summary>
        public virtual GenericclassResource Genericclass
        {
            get { return genericclass; }
        }

        private readonly GenericobjectResource genericobject;

        /// <summary>Gets the Genericobject resource.</summary>
        public virtual GenericobjectResource Genericobject
        {
            get { return genericobject; }
        }

        private readonly GiftcardclassResource giftcardclass;

        /// <summary>Gets the Giftcardclass resource.</summary>
        public virtual GiftcardclassResource Giftcardclass
        {
            get { return giftcardclass; }
        }

        private readonly GiftcardobjectResource giftcardobject;

        /// <summary>Gets the Giftcardobject resource.</summary>
        public virtual GiftcardobjectResource Giftcardobject
        {
            get { return giftcardobject; }
        }

        private readonly LoyaltyclassResource loyaltyclass;

        /// <summary>Gets the Loyaltyclass resource.</summary>
        public virtual LoyaltyclassResource Loyaltyclass
        {
            get { return loyaltyclass; }
        }

        private readonly LoyaltyobjectResource loyaltyobject;

        /// <summary>Gets the Loyaltyobject resource.</summary>
        public virtual LoyaltyobjectResource Loyaltyobject
        {
            get { return loyaltyobject; }
        }

        private readonly OfferclassResource offerclass;

        /// <summary>Gets the Offerclass resource.</summary>
        public virtual OfferclassResource Offerclass
        {
            get { return offerclass; }
        }

        private readonly OfferobjectResource offerobject;

        /// <summary>Gets the Offerobject resource.</summary>
        public virtual OfferobjectResource Offerobject
        {
            get { return offerobject; }
        }
    }

    ///<summary>A base abstract class for Walletobjects requests.</summary>
    public abstract class WalletobjectsBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new WalletobjectsBaseServiceRequest instance.</summary>
        protected WalletobjectsBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>Data format for the response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for the response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
        }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user
        /// limits.</summary>
        [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UserIp { get; set; }

        /// <summary>Initializes Walletobjects parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "userIp", new Google.Apis.Discovery.Parameter
                {
                    Name = "userIp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "boardingpassclass" collection of methods.</summary>
    public class BoardingpassclassResource
    {
        private const string Resource = "boardingpassclass";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public BoardingpassclassResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Adds a message to the boarding pass class referenced by the given class ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual AddmessageRequest Addmessage(Google.Apis.Walletobjects.v1.Data.BoardingPassClassAddMessageRequest body, string resourceId)
        {
            return new AddmessageRequest(service, body, resourceId);
        }

        /// <summary>Adds a message to the boarding pass class referenced by the given class ID.</summary>
        public class AddmessageRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.BoardingPassClassAddMessageResponse>
        {
            /// <summary>Constructs a new Addmessage request.</summary>
            public AddmessageRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.BoardingPassClassAddMessageRequest body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.BoardingPassClassAddMessageRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addmessage"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "boardingPassClass/{resourceId}/addMessage"; }
            }

            /// <summary>Initializes Addmessage parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns the boarding pass class with the given class ID.</summary>
        /// <param name="resourceId"></param>
        public virtual GetRequest Get(string resourceId)
        {
            return new GetRequest(service, resourceId);
        }

        /// <summary>Returns the boarding pass class with the given class ID.</summary>
        public class GetRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.BoardingPassClass>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }

            /// <summary>Specifies latest class version with a reviewStatus of approved be returned. The approved_only
            /// and version parameters cannot both be set.</summary>
            /// [default: false]
            [Google.Apis.Util.RequestParameterAttribute("approvedOnly", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> ApprovedOnly { get; set; }

            /// <summary>Identifies the version of the class to retrieve. The latest version of the class is returned if
            /// this value is not specified.</summary>
            [Google.Apis.Util.RequestParameterAttribute("version", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> Version { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "boardingPassClass/{resourceId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "approvedOnly", new Google.Apis.Discovery.Parameter
                    {
                        Name = "approvedOnly",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "false",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "version", new Google.Apis.Discovery.Parameter
                    {
                        Name = "version",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a boarding pass class with the given ID and properties.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual InsertRequest Insert(Google.Apis.Walletobjects.v1.Data.BoardingPassClass body)
        {
            return new InsertRequest(service, body);
        }

        /// <summary>Inserts a boarding pass class with the given ID and properties.</summary>
        public class InsertRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.BoardingPassClass>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.BoardingPassClass body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.BoardingPassClass Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "boardingPassClass"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Returns a list of all boarding pass classes for a given issuer ID.</summary>
        /// <param name="issuerId">The ID of the issuer authorized to list classes. No type field, as that is implicate in the
        /// type part of the Uri.</param>
        public virtual ListRequest List(long issuerId)
        {
            return new ListRequest(service, issuerId);
        }

        /// <summary>Returns a list of all boarding pass classes for a given issuer ID.</summary>
        public class ListRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.BoardingPassClassListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long issuerId)
                : base(service)
            {
                IssuerId = issuerId;
                InitParameters();
            }


            /// <summary>The ID of the issuer authorized to list classes. No type field, as that is implicate in the
            /// type part of the Uri.</summary>
            [Google.Apis.Util.RequestParameterAttribute("issuerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long IssuerId { get; private set; }

            /// <summary>Identifies the max number of results returned by a list. All results are returned if maxResults
            /// isn't defined.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Used to get the next set of results if maxResults is specified, but more than maxResults
            /// classes are available in a list. For example, if you have a list of 200 classes and you call list with
            /// maxResults set to 20, list will return the first 20 classes and a token. Call list again with maxResults
            /// set to 20 and the token to get the next 20 classes.</summary>
            [Google.Apis.Util.RequestParameterAttribute("token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Token { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "boardingPassClass"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "issuerId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "issuerId",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "token", new Google.Apis.Discovery.Parameter
                    {
                        Name = "token",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the boarding pass class referenced by the given class ID. This method supports patch
        /// semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual PatchRequest Patch(Google.Apis.Walletobjects.v1.Data.BoardingPassClass body, string resourceId)
        {
            return new PatchRequest(service, body, resourceId);
        }

        /// <summary>Updates the boarding pass class referenced by the given class ID. This method supports patch
        /// semantics.</summary>
        public class PatchRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.BoardingPassClass>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.BoardingPassClass body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.BoardingPassClass Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "boardingPassClass/{resourceId}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the boarding pass class referenced by the given class ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual UpdateRequest Update(Google.Apis.Walletobjects.v1.Data.BoardingPassClass body, string resourceId)
        {
            return new UpdateRequest(service, body, resourceId);
        }

        /// <summary>Updates the boarding pass class referenced by the given class ID.</summary>
        public class UpdateRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.BoardingPassClass>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.BoardingPassClass body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.BoardingPassClass Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "boardingPassClass/{resourceId}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "boardingpassobject" collection of methods.</summary>
    public class BoardingpassobjectResource
    {
        private const string Resource = "boardingpassobject";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public BoardingpassobjectResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Adds a message to the boarding pass object referenced by the given object ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual AddmessageRequest Addmessage(Google.Apis.Walletobjects.v1.Data.BoardingPassObjectAddMessageRequest body, string resourceId)
        {
            return new AddmessageRequest(service, body, resourceId);
        }

        /// <summary>Adds a message to the boarding pass object referenced by the given object ID.</summary>
        public class AddmessageRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.BoardingPassObjectAddMessageResponse>
        {
            /// <summary>Constructs a new Addmessage request.</summary>
            public AddmessageRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.BoardingPassObjectAddMessageRequest body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.BoardingPassObjectAddMessageRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addmessage"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "boardingPassObject/{resourceId}/addMessage"; }
            }

            /// <summary>Initializes Addmessage parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns the boarding pass object with the given object ID.</summary>
        /// <param name="resourceId"></param>
        public virtual GetRequest Get(string resourceId)
        {
            return new GetRequest(service, resourceId);
        }

        /// <summary>Returns the boarding pass object with the given object ID.</summary>
        public class GetRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.BoardingPassObject>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "boardingPassObject/{resourceId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a boarding pass object with the given ID and properties.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual InsertRequest Insert(Google.Apis.Walletobjects.v1.Data.BoardingPassObject body)
        {
            return new InsertRequest(service, body);
        }

        /// <summary>Inserts a boarding pass object with the given ID and properties.</summary>
        public class InsertRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.BoardingPassObject>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.BoardingPassObject body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.BoardingPassObject Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "boardingPassObject"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Returns a list of all boarding pass objects for a given class ID.</summary>
        /// <param name="classId">The ID of the class whose objects will be listed.</param>
        public virtual ListRequest List(string classId)
        {
            return new ListRequest(service, classId);
        }

        /// <summary>Returns a list of all boarding pass objects for a given class ID.</summary>
        public class ListRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.BoardingPassObjectListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string classId)
                : base(service)
            {
                ClassId = classId;
                InitParameters();
            }


            /// <summary>The ID of the class whose objects will be listed.</summary>
            [Google.Apis.Util.RequestParameterAttribute("classId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ClassId { get; private set; }

            /// <summary>Identifies the max number of results returned by a list. All results are returned if maxResults
            /// isn't defined.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Used to get the next set of results if maxResults is specified, but more than maxResults
            /// objects are available in a list. For example, if you have a list of 200 objects and you call list with
            /// maxResults set to 20, list will return the first 20 objects and a token. Call list again with maxResults
            /// set to 20 and the token to get the next 20 objects.</summary>
            [Google.Apis.Util.RequestParameterAttribute("token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Token { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "boardingPassObject"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "classId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "classId",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "token", new Google.Apis.Discovery.Parameter
                    {
                        Name = "token",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the boarding pass object referenced by the given object ID. This method supports patch
        /// semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual PatchRequest Patch(Google.Apis.Walletobjects.v1.Data.BoardingPassObject body, string resourceId)
        {
            return new PatchRequest(service, body, resourceId);
        }

        /// <summary>Updates the boarding pass object referenced by the given object ID. This method supports patch
        /// semantics.</summary>
        public class PatchRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.BoardingPassObject>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.BoardingPassObject body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.BoardingPassObject Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "boardingPassObject/{resourceId}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the boarding pass object referenced by the given object ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual UpdateRequest Update(Google.Apis.Walletobjects.v1.Data.BoardingPassObject body, string resourceId)
        {
            return new UpdateRequest(service, body, resourceId);
        }

        /// <summary>Updates the boarding pass object referenced by the given object ID.</summary>
        public class UpdateRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.BoardingPassObject>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.BoardingPassObject body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.BoardingPassObject Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "boardingPassObject/{resourceId}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "genericclass" collection of methods.</summary>
    public class GenericclassResource
    {
        private const string Resource = "genericclass";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public GenericclassResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Adds a message to the generic class referenced by the given class ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual AddmessageRequest Addmessage(Google.Apis.Walletobjects.v1.Data.GenericClassAddMessageRequest body, string resourceId)
        {
            return new AddmessageRequest(service, body, resourceId);
        }

        /// <summary>Adds a message to the generic class referenced by the given class ID.</summary>
        public class AddmessageRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GenericClassAddMessageResponse>
        {
            /// <summary>Constructs a new Addmessage request.</summary>
            public AddmessageRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.GenericClassAddMessageRequest body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.GenericClassAddMessageRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addmessage"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "genericClass/{resourceId}/addMessage"; }
            }

            /// <summary>Initializes Addmessage parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns the generic class with the given class ID.</summary>
        /// <param name="resourceId"></param>
        public virtual GetRequest Get(string resourceId)
        {
            return new GetRequest(service, resourceId);
        }

        /// <summary>Returns the generic class with the given class ID.</summary>
        public class GetRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GenericClass>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }

            /// <summary>Specifies latest class version with a reviewStatus of approved be returned. The approved_only
            /// and version parameters cannot both be set.</summary>
            /// [default: false]
            [Google.Apis.Util.RequestParameterAttribute("approvedOnly", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> ApprovedOnly { get; set; }

            /// <summary>Identifies the version of the class to retrieve. The latest version of the class is returned if
            /// this value is not specified.</summary>
            [Google.Apis.Util.RequestParameterAttribute("version", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> Version { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "genericClass/{resourceId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "approvedOnly", new Google.Apis.Discovery.Parameter
                    {
                        Name = "approvedOnly",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "false",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "version", new Google.Apis.Discovery.Parameter
                    {
                        Name = "version",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a generic class with the given ID and properties.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual InsertRequest Insert(Google.Apis.Walletobjects.v1.Data.GenericClass body)
        {
            return new InsertRequest(service, body);
        }

        /// <summary>Inserts a generic class with the given ID and properties.</summary>
        public class InsertRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GenericClass>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.GenericClass body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.GenericClass Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "genericClass"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Returns a list of all generic classes for a given issuer ID.</summary>
        /// <param name="issuerId">The ID of the issuer authorized to list classes. No type field, as that is implicate in the
        /// type part of the Uri.</param>
        public virtual ListRequest List(long issuerId)
        {
            return new ListRequest(service, issuerId);
        }

        /// <summary>Returns a list of all generic classes for a given issuer ID.</summary>
        public class ListRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GenericClassListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long issuerId)
                : base(service)
            {
                IssuerId = issuerId;
                InitParameters();
            }


            /// <summary>The ID of the issuer authorized to list classes. No type field, as that is implicate in the
            /// type part of the Uri.</summary>
            [Google.Apis.Util.RequestParameterAttribute("issuerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long IssuerId { get; private set; }

            /// <summary>Identifies the max number of results returned by a list. All results are returned if maxResults
            /// isn't defined.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Used to get the next set of results if maxResults is specified, but more than maxResults
            /// classes are available in a list. For example, if you have a list of 200 classes and you call list with
            /// maxResults set to 20, list will return the first 20 classes and a token. Call list again with maxResults
            /// set to 20 and the token to get the next 20 classes.</summary>
            [Google.Apis.Util.RequestParameterAttribute("token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Token { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "genericClass"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "issuerId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "issuerId",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "token", new Google.Apis.Discovery.Parameter
                    {
                        Name = "token",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the generic class referenced by the given class ID. This method supports patch
        /// semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual PatchRequest Patch(Google.Apis.Walletobjects.v1.Data.GenericClass body, string resourceId)
        {
            return new PatchRequest(service, body, resourceId);
        }

        /// <summary>Updates the generic class referenced by the given class ID. This method supports patch
        /// semantics.</summary>
        public class PatchRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GenericClass>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.GenericClass body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.GenericClass Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "genericClass/{resourceId}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the generic class referenced by the given class ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual UpdateRequest Update(Google.Apis.Walletobjects.v1.Data.GenericClass body, string resourceId)
        {
            return new UpdateRequest(service, body, resourceId);
        }

        /// <summary>Updates the generic class referenced by the given class ID.</summary>
        public class UpdateRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GenericClass>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.GenericClass body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.GenericClass Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "genericClass/{resourceId}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "genericobject" collection of methods.</summary>
    public class GenericobjectResource
    {
        private const string Resource = "genericobject";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public GenericobjectResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Adds a message to the generic object referenced by the given object ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual AddmessageRequest Addmessage(Google.Apis.Walletobjects.v1.Data.GenericObjectAddMessageRequest body, string resourceId)
        {
            return new AddmessageRequest(service, body, resourceId);
        }

        /// <summary>Adds a message to the generic object referenced by the given object ID.</summary>
        public class AddmessageRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GenericObjectAddMessageResponse>
        {
            /// <summary>Constructs a new Addmessage request.</summary>
            public AddmessageRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.GenericObjectAddMessageRequest body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.GenericObjectAddMessageRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addmessage"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "genericObject/{resourceId}/addMessage"; }
            }

            /// <summary>Initializes Addmessage parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns the generic object with the given object ID.</summary>
        /// <param name="resourceId"></param>
        public virtual GetRequest Get(string resourceId)
        {
            return new GetRequest(service, resourceId);
        }

        /// <summary>Returns the generic object with the given object ID.</summary>
        public class GetRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GenericObject>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "genericObject/{resourceId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a generic object with the given ID and properties.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual InsertRequest Insert(Google.Apis.Walletobjects.v1.Data.GenericObject body)
        {
            return new InsertRequest(service, body);
        }

        /// <summary>Inserts a generic object with the given ID and properties.</summary>
        public class InsertRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GenericObject>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.GenericObject body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.GenericObject Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "genericObject"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Returns a list of all generic objects for a given class ID.</summary>
        /// <param name="classId">The ID of the class whose objects will be listed.</param>
        public virtual ListRequest List(string classId)
        {
            return new ListRequest(service, classId);
        }

        /// <summary>Returns a list of all generic objects for a given class ID.</summary>
        public class ListRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GenericObjectListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string classId)
                : base(service)
            {
                ClassId = classId;
                InitParameters();
            }


            /// <summary>The ID of the class whose objects will be listed.</summary>
            [Google.Apis.Util.RequestParameterAttribute("classId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ClassId { get; private set; }

            /// <summary>Identifies the max number of results returned by a list. All results are returned if maxResults
            /// isn't defined.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Used to get the next set of results if maxResults is specified, but more than maxResults
            /// objects are available in a list. For example, if you have a list of 200 objects and you call list with
            /// maxResults set to 20, list will return the first 20 objects and a token. Call list again with maxResults
            /// set to 20 and the token to get the next 20 objects.</summary>
            [Google.Apis.Util.RequestParameterAttribute("token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Token { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "genericObject"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "classId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "classId",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "token", new Google.Apis.Discovery.Parameter
                    {
                        Name = "token",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the generic object referenced by the given object ID. This method supports patch
        /// semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual PatchRequest Patch(Google.Apis.Walletobjects.v1.Data.GenericObject body, string resourceId)
        {
            return new PatchRequest(service, body, resourceId);
        }

        /// <summary>Updates the generic object referenced by the given object ID. This method supports patch
        /// semantics.</summary>
        public class PatchRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GenericObject>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.GenericObject body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.GenericObject Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "genericObject/{resourceId}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the generic object referenced by the given object ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual UpdateRequest Update(Google.Apis.Walletobjects.v1.Data.GenericObject body, string resourceId)
        {
            return new UpdateRequest(service, body, resourceId);
        }

        /// <summary>Updates the generic object referenced by the given object ID.</summary>
        public class UpdateRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GenericObject>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.GenericObject body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.GenericObject Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "genericObject/{resourceId}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "giftcardclass" collection of methods.</summary>
    public class GiftcardclassResource
    {
        private const string Resource = "giftcardclass";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public GiftcardclassResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Adds a message to the gift card class referenced by the given class ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual AddmessageRequest Addmessage(Google.Apis.Walletobjects.v1.Data.GiftCardClassAddMessageRequest body, string resourceId)
        {
            return new AddmessageRequest(service, body, resourceId);
        }

        /// <summary>Adds a message to the gift card class referenced by the given class ID.</summary>
        public class AddmessageRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GiftCardClassAddMessageResponse>
        {
            /// <summary>Constructs a new Addmessage request.</summary>
            public AddmessageRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.GiftCardClassAddMessageRequest body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.GiftCardClassAddMessageRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addmessage"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "giftCardClass/{resourceId}/addMessage"; }
            }

            /// <summary>Initializes Addmessage parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns the gift card class with the given class ID.</summary>
        /// <param name="resourceId"></param>
        public virtual GetRequest Get(string resourceId)
        {
            return new GetRequest(service, resourceId);
        }

        /// <summary>Returns the gift card class with the given class ID.</summary>
        public class GetRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GiftCardClass>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// [default: false]
            [Google.Apis.Util.RequestParameterAttribute("approvedOnly", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> ApprovedOnly { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("version", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> Version { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "giftCardClass/{resourceId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "approvedOnly", new Google.Apis.Discovery.Parameter
                    {
                        Name = "approvedOnly",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "false",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "version", new Google.Apis.Discovery.Parameter
                    {
                        Name = "version",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a gift card class with the given ID and properties.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual InsertRequest Insert(Google.Apis.Walletobjects.v1.Data.GiftCardClass body)
        {
            return new InsertRequest(service, body);
        }

        /// <summary>Inserts a gift card class with the given ID and properties.</summary>
        public class InsertRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GiftCardClass>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.GiftCardClass body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.GiftCardClass Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "giftCardClass"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Returns a list of all gift card classes for a given issuer ID.</summary>
        /// <param name="issuerId"></param>
        public virtual ListRequest List(long issuerId)
        {
            return new ListRequest(service, issuerId);
        }

        /// <summary>Returns a list of all gift card classes for a given issuer ID.</summary>
        public class ListRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GiftCardClassListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long issuerId)
                : base(service)
            {
                IssuerId = issuerId;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("issuerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long IssuerId { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Token { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "giftCardClass"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "issuerId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "issuerId",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "token", new Google.Apis.Discovery.Parameter
                    {
                        Name = "token",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the gift card class referenced by the given class ID. This method supports patch
        /// semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual PatchRequest Patch(Google.Apis.Walletobjects.v1.Data.GiftCardClass body, string resourceId)
        {
            return new PatchRequest(service, body, resourceId);
        }

        /// <summary>Updates the gift card class referenced by the given class ID. This method supports patch
        /// semantics.</summary>
        public class PatchRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GiftCardClass>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.GiftCardClass body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.GiftCardClass Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "giftCardClass/{resourceId}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the gift card class referenced by the given class ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual UpdateRequest Update(Google.Apis.Walletobjects.v1.Data.GiftCardClass body, string resourceId)
        {
            return new UpdateRequest(service, body, resourceId);
        }

        /// <summary>Updates the gift card class referenced by the given class ID.</summary>
        public class UpdateRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GiftCardClass>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.GiftCardClass body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.GiftCardClass Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "giftCardClass/{resourceId}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "giftcardobject" collection of methods.</summary>
    public class GiftcardobjectResource
    {
        private const string Resource = "giftcardobject";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public GiftcardobjectResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Adds a message to the gift card object referenced by the given object ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual AddmessageRequest Addmessage(Google.Apis.Walletobjects.v1.Data.GiftCardObjectAddMessageRequest body, string resourceId)
        {
            return new AddmessageRequest(service, body, resourceId);
        }

        /// <summary>Adds a message to the gift card object referenced by the given object ID.</summary>
        public class AddmessageRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GiftCardObjectAddMessageResponse>
        {
            /// <summary>Constructs a new Addmessage request.</summary>
            public AddmessageRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.GiftCardObjectAddMessageRequest body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.GiftCardObjectAddMessageRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addmessage"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "giftCardObject/{resourceId}/addMessage"; }
            }

            /// <summary>Initializes Addmessage parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns the gift card object with the given object ID.</summary>
        /// <param name="resourceId"></param>
        public virtual GetRequest Get(string resourceId)
        {
            return new GetRequest(service, resourceId);
        }

        /// <summary>Returns the gift card object with the given object ID.</summary>
        public class GetRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GiftCardObject>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "giftCardObject/{resourceId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a gift card object with the given ID and properties.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual InsertRequest Insert(Google.Apis.Walletobjects.v1.Data.GiftCardObject body)
        {
            return new InsertRequest(service, body);
        }

        /// <summary>Inserts a gift card object with the given ID and properties.</summary>
        public class InsertRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GiftCardObject>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.GiftCardObject body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.GiftCardObject Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "giftCardObject"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Returns a list of all gift card objects for a given class ID.</summary>
        /// <param name="classId"></param>
        public virtual ListRequest List(string classId)
        {
            return new ListRequest(service, classId);
        }

        /// <summary>Returns a list of all gift card objects for a given class ID.</summary>
        public class ListRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GiftCardObjectListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string classId)
                : base(service)
            {
                ClassId = classId;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("classId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ClassId { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Token { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "giftCardObject"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "classId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "classId",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "token", new Google.Apis.Discovery.Parameter
                    {
                        Name = "token",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the gift card object referenced by the given object ID. This method supports patch
        /// semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual PatchRequest Patch(Google.Apis.Walletobjects.v1.Data.GiftCardObject body, string resourceId)
        {
            return new PatchRequest(service, body, resourceId);
        }

        /// <summary>Updates the gift card object referenced by the given object ID. This method supports patch
        /// semantics.</summary>
        public class PatchRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GiftCardObject>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.GiftCardObject body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.GiftCardObject Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "giftCardObject/{resourceId}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the gift card object referenced by the given object ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual UpdateRequest Update(Google.Apis.Walletobjects.v1.Data.GiftCardObject body, string resourceId)
        {
            return new UpdateRequest(service, body, resourceId);
        }

        /// <summary>Updates the gift card object referenced by the given object ID.</summary>
        public class UpdateRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.GiftCardObject>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.GiftCardObject body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.GiftCardObject Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "giftCardObject/{resourceId}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "loyaltyclass" collection of methods.</summary>
    public class LoyaltyclassResource
    {
        private const string Resource = "loyaltyclass";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public LoyaltyclassResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Adds a message to the loyalty class referenced by the given class ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual AddmessageRequest Addmessage(Google.Apis.Walletobjects.v1.Data.LoyaltyClassAddMessageRequest body, string resourceId)
        {
            return new AddmessageRequest(service, body, resourceId);
        }

        /// <summary>Adds a message to the loyalty class referenced by the given class ID.</summary>
        public class AddmessageRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.LoyaltyClassAddMessageResponse>
        {
            /// <summary>Constructs a new Addmessage request.</summary>
            public AddmessageRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.LoyaltyClassAddMessageRequest body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.LoyaltyClassAddMessageRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addmessage"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "loyaltyClass/{resourceId}/addMessage"; }
            }

            /// <summary>Initializes Addmessage parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns the loyalty class with the given class ID.</summary>
        /// <param name="resourceId"></param>
        public virtual GetRequest Get(string resourceId)
        {
            return new GetRequest(service, resourceId);
        }

        /// <summary>Returns the loyalty class with the given class ID.</summary>
        public class GetRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.LoyaltyClass>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }

            /// <summary>Returns the latest class version with a reviewStatus of approved. The approved_only and version
            /// parameters cannot both be set.</summary>
            /// [default: false]
            [Google.Apis.Util.RequestParameterAttribute("approvedOnly", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> ApprovedOnly { get; set; }

            /// <summary>Identifies the version of the class to return. The latest version of the class is returned if
            /// this value is not specified.</summary>
            [Google.Apis.Util.RequestParameterAttribute("version", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> Version { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "loyaltyClass/{resourceId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "approvedOnly", new Google.Apis.Discovery.Parameter
                    {
                        Name = "approvedOnly",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "false",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "version", new Google.Apis.Discovery.Parameter
                    {
                        Name = "version",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a loyalty class with the given ID and properties.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual InsertRequest Insert(Google.Apis.Walletobjects.v1.Data.LoyaltyClass body)
        {
            return new InsertRequest(service, body);
        }

        /// <summary>Inserts a loyalty class with the given ID and properties.</summary>
        public class InsertRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.LoyaltyClass>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.LoyaltyClass body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.LoyaltyClass Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "loyaltyClass"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Returns a list of all loyalty classes for a given issuer ID.</summary>
        /// <param name="issuerId">The ID of the issuer authorized to list classes.</param>
        public virtual ListRequest List(long issuerId)
        {
            return new ListRequest(service, issuerId);
        }

        /// <summary>Returns a list of all loyalty classes for a given issuer ID.</summary>
        public class ListRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.LoyaltyClassListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long issuerId)
                : base(service)
            {
                IssuerId = issuerId;
                InitParameters();
            }


            /// <summary>The ID of the issuer authorized to list classes.</summary>
            [Google.Apis.Util.RequestParameterAttribute("issuerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long IssuerId { get; private set; }

            /// <summary>Identifies the max number of results returned by a list. All results are returned if maxResults
            /// isn't defined.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Used to get the next set of results if maxResults is specified, but more than maxResults
            /// classes are available in a list. For example, if you have a list of 200 classes and you call list with
            /// maxResults set to 20, list will return the first 20 classes and a token. Call list again with maxResults
            /// set to 20 and the token to get the next 20 classes.</summary>
            [Google.Apis.Util.RequestParameterAttribute("token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Token { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "loyaltyClass"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "issuerId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "issuerId",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "token", new Google.Apis.Discovery.Parameter
                    {
                        Name = "token",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the loyalty class referenced by the given class ID. This method supports patch
        /// semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual PatchRequest Patch(Google.Apis.Walletobjects.v1.Data.LoyaltyClass body, string resourceId)
        {
            return new PatchRequest(service, body, resourceId);
        }

        /// <summary>Updates the loyalty class referenced by the given class ID. This method supports patch
        /// semantics.</summary>
        public class PatchRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.LoyaltyClass>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.LoyaltyClass body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.LoyaltyClass Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "loyaltyClass/{resourceId}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the loyalty class referenced by the given class ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual UpdateRequest Update(Google.Apis.Walletobjects.v1.Data.LoyaltyClass body, string resourceId)
        {
            return new UpdateRequest(service, body, resourceId);
        }

        /// <summary>Updates the loyalty class referenced by the given class ID.</summary>
        public class UpdateRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.LoyaltyClass>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.LoyaltyClass body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.LoyaltyClass Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "loyaltyClass/{resourceId}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "loyaltyobject" collection of methods.</summary>
    public class LoyaltyobjectResource
    {
        private const string Resource = "loyaltyobject";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public LoyaltyobjectResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Adds a message to the loyalty object referenced by the given object ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId">Unique identifier for an object. Must be unique across all objects from an issuer. Should
        /// follow the format .<identifier(chosen by you)>. Your unique identifier should only include alphanumeric characters,
        /// '_' or '-'.</param>
        public virtual AddmessageRequest Addmessage(Google.Apis.Walletobjects.v1.Data.LoyaltyObjectAddMessageRequest body, string resourceId)
        {
            return new AddmessageRequest(service, body, resourceId);
        }

        /// <summary>Adds a message to the loyalty object referenced by the given object ID.</summary>
        public class AddmessageRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.LoyaltyObjectAddMessageResponse>
        {
            /// <summary>Constructs a new Addmessage request.</summary>
            public AddmessageRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.LoyaltyObjectAddMessageRequest body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }


            /// <summary>Unique identifier for an object. Must be unique across all objects from an issuer. Should
            /// follow the format .<identifier(chosen by you)>. Your unique identifier should only include alphanumeric
            /// characters, '_' or '-'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.LoyaltyObjectAddMessageRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addmessage"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "loyaltyObject/{resourceId}/addMessage"; }
            }

            /// <summary>Initializes Addmessage parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns the loyalty object with the given object ID.</summary>
        /// <param name="resourceId"></param>
        public virtual GetRequest Get(string resourceId)
        {
            return new GetRequest(service, resourceId);
        }

        /// <summary>Returns the loyalty object with the given object ID.</summary>
        public class GetRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.LoyaltyObject>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "loyaltyObject/{resourceId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a loyalty object with the given ID and properties.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual InsertRequest Insert(Google.Apis.Walletobjects.v1.Data.LoyaltyObject body)
        {
            return new InsertRequest(service, body);
        }

        /// <summary>Inserts a loyalty object with the given ID and properties.</summary>
        public class InsertRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.LoyaltyObject>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.LoyaltyObject body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.LoyaltyObject Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "loyaltyObject"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Returns a list of all loyalty objects for a given class ID.</summary>
        /// <param name="classId">The ID of the class whose objects will be listed.</param>
        public virtual ListRequest List(string classId)
        {
            return new ListRequest(service, classId);
        }

        /// <summary>Returns a list of all loyalty objects for a given class ID.</summary>
        public class ListRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.LoyaltyObjectListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string classId)
                : base(service)
            {
                ClassId = classId;
                InitParameters();
            }


            /// <summary>The ID of the class whose objects will be listed.</summary>
            [Google.Apis.Util.RequestParameterAttribute("classId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ClassId { get; private set; }

            /// <summary>Identifies the max number of results returned by a list. All results are returned if maxResults
            /// isn't defined.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Used to get the next set of results if maxResults is specified, but more than maxResults
            /// objects are available in a list. For example, if you have a list of 200 objects and you call list with
            /// maxResults set to 20, list will return the first 20 objects and a token. Call list again with maxResults
            /// set to 20 and the token to get the next 20 objects.</summary>
            [Google.Apis.Util.RequestParameterAttribute("token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Token { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "loyaltyObject"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "classId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "classId",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "token", new Google.Apis.Discovery.Parameter
                    {
                        Name = "token",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the loyalty object referenced by the given object ID. This method supports patch
        /// semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual PatchRequest Patch(Google.Apis.Walletobjects.v1.Data.LoyaltyObject body, string resourceId)
        {
            return new PatchRequest(service, body, resourceId);
        }

        /// <summary>Updates the loyalty object referenced by the given object ID. This method supports patch
        /// semantics.</summary>
        public class PatchRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.LoyaltyObject>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.LoyaltyObject body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.LoyaltyObject Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "loyaltyObject/{resourceId}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the loyalty object referenced by the given object ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual UpdateRequest Update(Google.Apis.Walletobjects.v1.Data.LoyaltyObject body, string resourceId)
        {
            return new UpdateRequest(service, body, resourceId);
        }

        /// <summary>Updates the loyalty object referenced by the given object ID.</summary>
        public class UpdateRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.LoyaltyObject>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.LoyaltyObject body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.LoyaltyObject Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "loyaltyObject/{resourceId}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "offerclass" collection of methods.</summary>
    public class OfferclassResource
    {
        private const string Resource = "offerclass";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public OfferclassResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Adds a message to the offer class referenced by the given class ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual AddmessageRequest Addmessage(Google.Apis.Walletobjects.v1.Data.OfferClassAddMessageRequest body, string resourceId)
        {
            return new AddmessageRequest(service, body, resourceId);
        }

        /// <summary>Adds a message to the offer class referenced by the given class ID.</summary>
        public class AddmessageRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.OfferClassAddMessageResponse>
        {
            /// <summary>Constructs a new Addmessage request.</summary>
            public AddmessageRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.OfferClassAddMessageRequest body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.OfferClassAddMessageRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addmessage"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "offerClass/{resourceId}/addMessage"; }
            }

            /// <summary>Initializes Addmessage parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns the offer class with the given class ID.</summary>
        /// <param name="resourceId"></param>
        public virtual GetRequest Get(string resourceId)
        {
            return new GetRequest(service, resourceId);
        }

        /// <summary>Returns the offer class with the given class ID.</summary>
        public class GetRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.OfferClass>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }

            /// <summary>Specifies latest class version with a reviewStatus of approved be returned. The approved_only
            /// and version parameters cannot both be set.</summary>
            /// [default: false]
            [Google.Apis.Util.RequestParameterAttribute("approvedOnly", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> ApprovedOnly { get; set; }

            /// <summary>Identifies the version of the class to retrieve. The latest version of the class is returned if
            /// this value is not specified.</summary>
            [Google.Apis.Util.RequestParameterAttribute("version", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> Version { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "offerClass/{resourceId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "approvedOnly", new Google.Apis.Discovery.Parameter
                    {
                        Name = "approvedOnly",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "false",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "version", new Google.Apis.Discovery.Parameter
                    {
                        Name = "version",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts an offer class with the given ID and properties.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual InsertRequest Insert(Google.Apis.Walletobjects.v1.Data.OfferClass body)
        {
            return new InsertRequest(service, body);
        }

        /// <summary>Inserts an offer class with the given ID and properties.</summary>
        public class InsertRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.OfferClass>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.OfferClass body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.OfferClass Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "offerClass"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Returns a list of all offer classes for a given issuer ID.</summary>
        /// <param name="issuerId">The ID of the issuer authorized to list classes. No type field, as that is implicate in the
        /// type part of the Uri.</param>
        public virtual ListRequest List(long issuerId)
        {
            return new ListRequest(service, issuerId);
        }

        /// <summary>Returns a list of all offer classes for a given issuer ID.</summary>
        public class ListRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.OfferClassListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long issuerId)
                : base(service)
            {
                IssuerId = issuerId;
                InitParameters();
            }


            /// <summary>The ID of the issuer authorized to list classes. No type field, as that is implicate in the
            /// type part of the Uri.</summary>
            [Google.Apis.Util.RequestParameterAttribute("issuerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long IssuerId { get; private set; }

            /// <summary>Identifies the max number of results returned by a list. All results are returned if maxResults
            /// isn't defined.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Used to get the next set of results if maxResults is specified, but more than maxResults
            /// classes are available in a list. For example, if you have a list of 200 classes and you call list with
            /// maxResults set to 20, list will return the first 20 classes and a token. Call list again with maxResults
            /// set to 20 and the token to get the next 20 classes.</summary>
            [Google.Apis.Util.RequestParameterAttribute("token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Token { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "offerClass"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "issuerId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "issuerId",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "token", new Google.Apis.Discovery.Parameter
                    {
                        Name = "token",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the offer class referenced by the given class ID. This method supports patch
        /// semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual PatchRequest Patch(Google.Apis.Walletobjects.v1.Data.OfferClass body, string resourceId)
        {
            return new PatchRequest(service, body, resourceId);
        }

        /// <summary>Updates the offer class referenced by the given class ID. This method supports patch
        /// semantics.</summary>
        public class PatchRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.OfferClass>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.OfferClass body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.OfferClass Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "offerClass/{resourceId}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the offer class referenced by the given class ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual UpdateRequest Update(Google.Apis.Walletobjects.v1.Data.OfferClass body, string resourceId)
        {
            return new UpdateRequest(service, body, resourceId);
        }

        /// <summary>Updates the offer class referenced by the given class ID.</summary>
        public class UpdateRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.OfferClass>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.OfferClass body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.OfferClass Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "offerClass/{resourceId}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "offerobject" collection of methods.</summary>
    public class OfferobjectResource
    {
        private const string Resource = "offerobject";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public OfferobjectResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Adds a message to the offer object referenced by the given object ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual AddmessageRequest Addmessage(Google.Apis.Walletobjects.v1.Data.OfferObjectAddMessageRequest body, string resourceId)
        {
            return new AddmessageRequest(service, body, resourceId);
        }

        /// <summary>Adds a message to the offer object referenced by the given object ID.</summary>
        public class AddmessageRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.OfferObjectAddMessageResponse>
        {
            /// <summary>Constructs a new Addmessage request.</summary>
            public AddmessageRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.OfferObjectAddMessageRequest body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.OfferObjectAddMessageRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addmessage"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "offerObject/{resourceId}/addMessage"; }
            }

            /// <summary>Initializes Addmessage parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns the offer object with the given object ID.</summary>
        /// <param name="resourceId"></param>
        public virtual GetRequest Get(string resourceId)
        {
            return new GetRequest(service, resourceId);
        }

        /// <summary>Returns the offer object with the given object ID.</summary>
        public class GetRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.OfferObject>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "offerObject/{resourceId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts an offer object with the given ID and properties.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual InsertRequest Insert(Google.Apis.Walletobjects.v1.Data.OfferObject body)
        {
            return new InsertRequest(service, body);
        }

        /// <summary>Inserts an offer object with the given ID and properties.</summary>
        public class InsertRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.OfferObject>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.OfferObject body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.OfferObject Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "offerObject"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Returns a list of all offer objects for a given class ID.</summary>
        /// <param name="classId">The ID of the class whose objects will be listed.</param>
        public virtual ListRequest List(string classId)
        {
            return new ListRequest(service, classId);
        }

        /// <summary>Returns a list of all offer objects for a given class ID.</summary>
        public class ListRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.OfferObjectListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string classId)
                : base(service)
            {
                ClassId = classId;
                InitParameters();
            }


            /// <summary>The ID of the class whose objects will be listed.</summary>
            [Google.Apis.Util.RequestParameterAttribute("classId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ClassId { get; private set; }

            /// <summary>Identifies the max number of results returned by a list. All results are returned if maxResults
            /// isn't defined.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Used to get the next set of results if maxResults is specified, but more than maxResults
            /// objects are available in a list. For example, if you have a list of 200 objects and you call list with
            /// maxResults set to 20, list will return the first 20 objects and a token. Call list again with maxResults
            /// set to 20 and the token to get the next 20 objects.</summary>
            [Google.Apis.Util.RequestParameterAttribute("token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Token { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "offerObject"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "classId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "classId",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "token", new Google.Apis.Discovery.Parameter
                    {
                        Name = "token",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the offer object referenced by the given object ID. This method supports patch
        /// semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual PatchRequest Patch(Google.Apis.Walletobjects.v1.Data.OfferObject body, string resourceId)
        {
            return new PatchRequest(service, body, resourceId);
        }

        /// <summary>Updates the offer object referenced by the given object ID. This method supports patch
        /// semantics.</summary>
        public class PatchRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.OfferObject>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.OfferObject body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.OfferObject Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "offerObject/{resourceId}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the offer object referenced by the given object ID.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceId"></param>
        public virtual UpdateRequest Update(Google.Apis.Walletobjects.v1.Data.OfferObject body, string resourceId)
        {
            return new UpdateRequest(service, body, resourceId);
        }

        /// <summary>Updates the offer object referenced by the given object ID.</summary>
        public class UpdateRequest : WalletobjectsBaseServiceRequest<Google.Apis.Walletobjects.v1.Data.OfferObject>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Walletobjects.v1.Data.OfferObject body, string resourceId)
                : base(service)
            {
                ResourceId = resourceId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Walletobjects.v1.Data.OfferObject Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "offerObject/{resourceId}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}
